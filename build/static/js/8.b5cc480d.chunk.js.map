{"version":3,"sources":["components/Card/postCard/postCard.styles.ts","components/Card/postCard/index.tsx","components/Card/commentCard/commentsCard.styles.ts","components/Card/commentCard/index.tsx","components/Card/subredditCard/subredditCard.styles.ts","components/Card/subredditCard/index.tsx","components/Card/index.tsx","pages/post/post.styles.ts","pages/post/index.tsx"],"names":["postCardStyles","theme","createStyles","root","display","flexDirection","justifyContent","width","minWidth","backgroundColor","palette","background","paper","border","fade","action","disabled","borderRadius","marginBottom","transition","color","textDecoration","transform","boxShadow","disabledBackground","post","padding","breakpoints","down","ratings","alignItems","height","borderLeft","selected","cursor","fontSize","text","secondary","avatar","red","header","paddingBottom","spacing","info","fontWeight","marginLeft","margin","paddingLeft","marginTop","content","details","lineHeight","actions","preview","alignSelf","objectFit","withStyles","Component","component","classes","data","Error","isVideo","test","url","src","alt","subreddit","urlParts","split","pop","join","videoUrl","controls","muted","autoPlay","loop","aria-label","title","type","media","getSrcFromStr","media_embed","allow","frameBorder","allowFullScreen","post_hint","domain","Chip","label","variant","href","target","rel","clickable","process","REACT_APP_VERCEL_URL","shareUrl","id","className","Avatar","thumbnail","data-testid","to","author","selftext","truncate","length","Button","startIcon","Link","Tooltip","placement","arrow","onClick","copyToClipboard","fd","shortenLargeNumber","ups","commentsCardStyles","listStyle","hover","primary","fontStyle","body","wordWrap","overflowWrap","actionVote","marginRight","postId","authorDisplay","timeSinceCreated","getTimeFromNow","created_utc","formatSinceEdited","edited","formatedUpvotes","upvotes","style","size","subredditCardStyles","maxWidth","bullet","paddingTop","shortDescription","public_description","description","headerPreview","banner_img","formatedSubscribers","subscribers","CardHeader","icon_img","display_name_prefixed","subheader","display_name","CardMedia","image","CardContent","Typography","CardActions","disableSpacing","Card","postProps","subredditProps","commentProps","StyledBreadcrumb","typography","fontWeightRegular","shadows","emphasize","postStyles","top","divider","panel","wrapper","widht","underLine","clrReddit","paddingRight","comments","useParams","subredditName","postState","useFetch","getPost","params","isLoading","isError","error","Layout","navigation","aside","sidebarProps","Alert","severity","AlertTitle","Skeleton","Breadcrumbs","maxItems","icon","name","disableRipple","disableFocusRipple","upvote_ratio","Divider","orientation","flexItem","author_flair_background_color","plugins","gfm","children","url_overridden_by_dest","map","comment"],"mappings":"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","file":"static/js/8.b5cc480d.chunk.js","sourcesContent":["import { createStyles, Theme, fade } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\nexport type StyleProps = {\n  classes: {\n    root: string;\n    post: string;\n    avatar: string;\n    header: string;\n    info: string;\n    content: string;\n    details: string;\n    actions: string;\n    preview: string;\n    ratings: string;\n  };\n};\n\nconst postCardStyles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '95%',\n      minWidth: 240,\n      backgroundColor: theme.palette.background.paper,\n      border: `1px solid ${fade(theme.palette.action.disabled, 0.16)}`,\n      borderRadius: 2,\n      marginBottom: 10,\n      transition: 'all 150ms',\n      '& a': {\n        color: 'inherit',\n        textDecoration: 'none',\n      },\n      '&:hover': {\n        transform: 'translate(3px, -2px)',\n        boxShadow: `0 4px 3px -2px ${theme.palette.action.disabledBackground}`,\n      },\n    },\n    post: {\n      width: '100%',\n      padding: '16px 16px 4px',\n      [theme.breakpoints.down('xs')]: {\n        padding: '12px 8px 4px',\n      },\n    },\n    ratings: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: 75,\n      height: 'inherit',\n      borderLeft: `1px solid ${fade(theme.palette.action.disabled, 0.16)}`,\n      backgroundColor: theme.palette.action.selected,\n      cursor: 'default',\n      '& > h2': {\n        fontSize: 20,\n        color: theme.palette.text.secondary,\n      },\n      [theme.breakpoints.down('xs')]: {\n        width: 55,\n        '& > h2': {\n          fontSize: 14.5,\n        },\n      },\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: theme.spacing(1),\n    },\n    info: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      '& > span': {\n        fontWeight: 600,\n        marginLeft: 20,\n        '&:hover': {\n          textDecoration: 'underline',\n        },\n      },\n      '& > p': {\n        fontSize: 13,\n        margin: 0,\n        marginLeft: 15,\n        '& > a:hover': {\n          textDecoration: 'underline',\n        },\n      },\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        '& > p': { paddingLeft: theme.spacing(0.7), marginTop: 3 },\n      },\n    },\n    content: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n      },\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      '& > p': {\n        fontSize: 16,\n        lineHeight: 1.6,\n      },\n      '& h2': {\n        fontSize: 17.5,\n      },\n      [theme.breakpoints.down('xs')]: {\n        '& h2': { fontSize: 16.5 },\n      },\n    },\n    actions: {\n      marginTop: 10,\n      '& > .MuiButtonBase-root': {\n        color: theme.palette.text.secondary,\n      },\n    },\n    preview: {\n      display: 'flex',\n      alignItems: 'center',\n      '& > a': {\n        margin: '10px 70px',\n        alignSelf: 'center',\n        [theme.breakpoints.down('xs')]: {\n          margin: '15px 4px 10px',\n        },\n      },\n      '& > img': {\n        width: 256,\n        height: 144,\n        objectFit: 'cover',\n        marginLeft: 10,\n        [theme.breakpoints.down('xs')]: {\n          width: '100%',\n          height: '100%',\n          marginLeft: 0,\n        },\n      },\n      '& > iframe, & > video': {\n        width: '256px',\n        height: '144px',\n        marginLeft: 10,\n        [theme.breakpoints.down('xs')]: {\n          width: '100%',\n          height: '52vw',\n          marginLeft: 0,\n        },\n      },\n    },\n  });\n\nexport default postCardStyles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Avatar, Tooltip, Button, Chip } from '@material-ui/core';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ShareIcon from '@material-ui/icons/Share';\nimport LinkIcon from '@material-ui/icons/Link';\nimport truncate from 'lodash/truncate';\nimport { copyToClipboard, fd, getSrcFromStr } from '../../../helpers';\nimport postCardStyles, { StyleProps } from './postCard.styles';\n\nexport type TPostData = {\n  id: string;\n  subreddit: string;\n  title: string;\n  author: string;\n  selftext: string;\n  domain: string;\n  media: {\n    type: string;\n  } | null;\n  media_embed: {\n    content: string;\n  };\n  secure_media_embed: {\n    media_domain_url: string;\n  };\n  thumbnail: string;\n  permalink: string;\n  post_hint: string;\n  url: string;\n  ups: number;\n};\nexport interface PostDataProps {\n  component?: React.ElementType;\n  data?: TPostData;\n}\n\nconst PostCard: React.FC<StyleProps & PostDataProps> = ({\n  component: Component,\n  classes,\n  data,\n}): React.ReactElement | null => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n\n  const isImage = () => /bmp|webp|png|jpg|jpeg|gif$/.test(data.url);\n\n  // TODO Figure out how to make \"mov\" keyword not to match the \"movie\" subreddit in the url\n  const isVideo = () => /mp4|gifv|mkv|webm$/.test(data.url);\n  const videoUrl = () => {\n    const urlParts = data.url.split('.');\n    urlParts.pop();\n\n    return [...urlParts, 'mp4'].join('.');\n  };\n  const isEmbed = () => {\n    if (data.media) {\n      return data.media.type === 'youtube.com';\n    }\n    return false;\n  };\n\n  // BUG: isLink does not match all link posts\n  // TODO: Handle all the edge cases, including property self hint not having an assigned value for some reddit self links\n  const isLink = () => {\n    return (\n      !isVideo() &&\n      (data.post_hint === 'link' ||\n        data.post_hint === 'self' ||\n        data.domain === 'instagram.com')\n    );\n  };\n\n  let preview;\n  if (isImage()) {\n    preview = <img src={data.url} alt={data.subreddit} />;\n  } else if (isVideo()) {\n    const url = videoUrl();\n\n    preview = (\n      <video controls muted autoPlay loop aria-label={data.title}>\n        <source type=\"video/mp4\" src={url} />\n      </video>\n    );\n  } else if (isEmbed()) {\n    const url = getSrcFromStr(data.media_embed.content);\n\n    preview = (\n      <iframe\n        title={data.subreddit}\n        aria-label={data.title}\n        src={url}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        frameBorder=\"0\"\n        allowFullScreen\n      />\n    );\n  } else if (isLink()) {\n    preview = (\n      <Chip\n        label=\"External Link\"\n        variant=\"outlined\"\n        color=\"primary\"\n        component=\"a\"\n        href={data.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        clickable\n      />\n    );\n  } else {\n    preview = null;\n  }\n\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${data.id}`;\n\n  /* Clasa componentei card de postare */\n  return (\n    <Component className={classes.root} aria-label=\"reddit post\">\n      <div className={classes.post}>\n        <header className={classes.header} aria-label=\"post head\">\n          <Avatar alt={data.subreddit} src={data.thumbnail} />\n\n          <div className={classes.info}>\n            <span data-testid=\"subreddit\">\n              <Link to={`/subreddit/${data.subreddit}`}>\n                r/{data.subreddit}\n              </Link>\n            </span>\n\n            <p data-testid=\"author\">\n              Postat de{' '}\n              <Link to={`/profile/${data.author}`}>u/{data.author}</Link>\n            </p>\n          </div>\n        </header>\n        <section className={classes.content} aria-label=\"post body\">\n          <div className={classes.details}>\n            <Link to={`/post/${data.subreddit}/comments/${data.id}`}>\n              <h2 data-testid=\"title\">{data.title}</h2>\n              {data.selftext && (\n                <p data-testid=\"description\">\n                  {truncate(data.selftext, { length: 200 })}\n                </p>\n              )}\n            </Link>\n            <div className={classes.actions}>\n              <Button\n                aria-label=\"comments\"\n                startIcon={<CommentIcon fontSize=\"small\" />}\n                component={Link}\n                to={`/post/${data.subreddit}/comments/${data.id}`}\n              >\n                Comentarii\n              </Button>\n              <Button\n                aria-label=\"details\"\n                startIcon={<LinkIcon fontSize=\"small\" />}\n                component={Link}\n                to={`/post/${data.subreddit}/comments/${data.id}`}\n              >\n                Detalii\n              </Button>\n              <Tooltip placement=\"right\" title=\"Copy\" aria-label=\"copy\" arrow>\n                <Button\n                  aria-label=\"share\"\n                  startIcon={<ShareIcon fontSize=\"small\" />}\n                  onClick={() => copyToClipboard(shareUrl)}\n                >\n                  Distribuie\n                </Button>\n              </Tooltip>\n            </div>\n          </div>\n          <div className={classes.preview} data-testid=\"preview\">\n            {preview}\n          </div>\n        </section>\n      </div>\n      <div className={classes.ratings}>\n        <h2>{fd.shortenLargeNumber(data.ups, null)}</h2>\n      </div>\n    </Component>\n  );\n};\n\nexport default withStyles(postCardStyles)(PostCard);\n","import { createStyles, Theme } from '@material-ui/core';\n\nexport type StyleProps = {\n  classes: {\n    root: string;\n    header: string;\n    body: string;\n    actions: string;\n    actionVote: string;\n  };\n};\n\nconst commentsCardStyles = (theme: Theme) =>\n  createStyles({\n    root: {\n      listStyle: 'none',\n      borderLeft: `2px solid ${theme.palette.text.disabled}`,\n      padding: '12px 8px 8px 30px',\n      backgroundColor: theme.palette.action.hover,\n      marginBottom: 18,\n      '&:last-of-type': {\n        marginBottom: theme.spacing(0),\n      },\n    },\n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      '& > a': {\n        textDecoration: 'none',\n        color: theme.palette.text.primary,\n        '&:hover': {\n          textDecoration: 'underline',\n        },\n      },\n      '& > span': {\n        color: theme.palette.text.disabled,\n        fontStyle: 'italic',\n        cursor: 'not-allowed',\n      },\n      '& > time': {\n        fontSize: 12,\n        marginLeft: theme.spacing(1),\n        color: theme.palette.text.secondary,\n      },\n    },\n    body: {\n      marginTop: theme.spacing(1),\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n    },\n    actions: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    actionVote: {\n      color: `${theme.palette.text.primary} !important`,\n      marginRight: theme.spacing(1.2),\n      '& .MuiButton-startIcon': {\n        marginRight: theme.spacing(0.6),\n      },\n    },\n  });\n\nexport default commentsCardStyles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Button, Tooltip } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ShareIcon from '@material-ui/icons/Share';\nimport commentsCardStyles, { StyleProps } from './commentsCard.styles';\nimport { fd, copyToClipboard } from '../../../helpers';\n\nexport type TCommentData = {\n  id: string;\n  author: string;\n  body: string;\n  body_html: string;\n  created_utc: number;\n  edited: number;\n  permalink: string;\n  ups: number;\n  subreddit: string;\n};\n\nexport interface CommentDataProps {\n  component?: React.ElementType;\n  data?: TCommentData;\n  postId?: string;\n}\n\nconst CommentCard: React.FC<CommentDataProps & StyleProps> = ({\n  classes,\n  component: Component,\n  data,\n  postId,\n}): React.ReactElement | null => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n\n  const timeSinceCreated = fd.getTimeFromNow(data.created_utc);\n  const formatSinceEdited = fd.getTimeFromNow(data.edited);\n  const formatedUpvotes = fd.shortenLargeNumber(data.ups);\n  const upvotes = data.ups > 1 ? 'voturi' : 'vot';\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${postId}`;\n\n  let authorDisplay;\n  if (data.author !== '[deleted]') {\n    authorDisplay = (\n      <Link data-testid=\"author\" to={`/profile/${data.author}`}>\n        {data.author}\n      </Link>\n    );\n  } else {\n    authorDisplay = <span data-testid=\"author\">{data.author}</span>;\n  }\n\n  /* Clasa componentei card de comentarii */\n  return (\n    <Component className={classes.root} id={data.id}>\n      <div className={classes.header} aria-label=\"comment head\">\n        {authorDisplay}\n        <time>{timeSinceCreated}</time>\n        {data.edited && (\n          <time style={{ fontStyle: 'italic' }}>\n            {' '}\n            - editat {formatSinceEdited}\n          </time>\n        )}\n      </div>\n      <p className={classes.body} aria-label=\"comment body\" data-testid=\"body\">\n        {data.body}\n      </p>\n      <div className={classes.actions} aria-label=\"comment actions\">\n        <Button\n          startIcon={<PublishIcon />}\n          size=\"small\"\n          classes={{ root: classes.actionVote }}\n          disabled\n        >\n          {formatedUpvotes} {upvotes}\n        </Button>\n        {/* Fiecare sectiune are un tooltip cu informatii suplimentare preluate din API */}\n        <Tooltip placement=\"right\" title=\"Copiază\" aria-label=\"copy\" arrow>\n          <Button\n            onClick={() => copyToClipboard(shareUrl)}\n            startIcon={<ShareIcon />}\n            size=\"small\"\n          >\n            Distribuie\n          </Button>\n        </Tooltip>\n      </div>\n    </Component>\n  );\n};\n\nexport default withStyles(commentsCardStyles)(CommentCard);\n","import { createStyles, Theme } from '@material-ui/core/styles';\n\nexport type StyleProps = {\n  classes: {\n    root: string;\n    header: string;\n    bullet: string;\n    body: string;\n    media: string;\n  };\n};\n\nconst subredditCardStyles = (theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 485,\n      marginBottom: theme.spacing(2),\n      '&:last-of-type': {\n        marginBottom: theme.spacing(0),\n      },\n      '& .MuiCardHeader-title': {\n        color: theme.palette.text.primary,\n      },\n    },\n\n    header: {\n      textDecoration: 'none',\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    body: {\n      marginTop: theme.spacing(1.6),\n      paddingLeft: theme.spacing(0.6),\n      '& > h2': {\n        fontSize: 24,\n        marginBottom: theme.spacing(0.5),\n      },\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n  });\n\nexport default subredditCardStyles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  withStyles,\n  Card,\n  CardHeader,\n  CardMedia,\n  CardActions,\n  CardContent,\n  Button,\n  Typography,\n  Avatar,\n  Chip,\n} from '@material-ui/core';\nimport ReplyAllIcon from '@material-ui/icons/ReplyAll';\nimport subredditCardStyles, { StyleProps } from './subredditCard.styles';\nimport { fd } from '../../../helpers';\n\nexport type TSubredditData = {\n  title: string;\n  display_name: string;\n  display_name_prefixed: string;\n  primary_color: string;\n  key_color: string;\n  description: string;\n  public_description: string;\n  subscribers: string;\n  header_title: string;\n  banner_img: string;\n  icon_img: string;\n  url: string;\n  created_utc: number;\n};\n\nexport type SubredditDataProps = {\n  data?: TSubredditData;\n};\n\nconst SubredditCard: React.FC<StyleProps & SubredditDataProps> = ({\n  classes,\n  data,\n}): React.ReactElement | null => {\n  if (!data) return null;\n\n  const shortDescription =\n    data.public_description || data.description.split('\\n')[0];\n\n  const headerPreview =\n    data.banner_img ||\n    `${process.env.PUBLIC_URL}/images/subreddit_placeholder.png`;\n\n  const timeSinceCreated = fd.getTimeFromNow(data.created_utc, true);\n  const formatedSubscribers = fd.shortenLargeNumber(data.subscribers);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" src={data.icon_img} alt={data.title} />\n        }\n        title={data.display_name_prefixed}\n        subheader={`o comunitate de ${timeSinceCreated}`}\n        component={Link}\n        to={`/subreddit/${data.display_name}`}\n        className={classes.header}\n      />\n      <CardMedia\n        className={classes.media}\n        image={headerPreview}\n        title={data.title}\n        component={Link}\n        to={`/subreddit/${data.display_name}`}\n      />\n      <CardContent>\n        <Chip\n          variant=\"outlined\"\n          color=\"primary\"\n          label={`${formatedSubscribers} de abonați`}\n        />\n        <div className={classes.body}>\n          <Typography variant=\"h5\" component=\"h2\">\n            {data.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {shortDescription}\n          </Typography>\n        </div>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Button\n          aria-label=\"browse subreddit\"\n          startIcon={<ReplyAllIcon />}\n          component={Link}\n          to={`/subreddit/${data.display_name}`}\n        >\n          Răsfoiește subreddit-ul\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default withStyles(subredditCardStyles)(SubredditCard);\n","import React from 'react';\nimport PostCard, { PostDataProps } from './postCard';\nimport CommentCard, { CommentDataProps } from './commentCard';\nimport SubredditCard, { SubredditDataProps } from './subredditCard';\n\ntype Props = {\n  component?: React.ElementType;\n  type?: 'comment' | 'subreddit' | null;\n  postProps?: PostDataProps | null;\n  subredditProps?: SubredditDataProps | null;\n  commentProps?: CommentDataProps | null;\n};\n\nconst Card: React.FC<Props> = ({\n  component = 'div',\n  type,\n  postProps,\n  subredditProps,\n  commentProps,\n}) => {\n  if (type === 'subreddit') {\n    return <SubredditCard {...subredditProps} />;\n  }\n\n  if (type === 'comment') {\n    return <CommentCard component={component} {...commentProps} />;\n  }\n\n  return <PostCard component={component} {...postProps} />;\n};\n\nexport default Card;\n","import Chip from '@material-ui/core/Chip';\nimport {\n  emphasize,\n  withStyles,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\n\nexport type StyleProps = {\n  classes: {\n    post: string;\n    header: string;\n    body: string;\n    info: string;\n    actionVote: string;\n    panel: string;\n    wrapper: string;\n    title: string;\n    top: string;\n    divider: string;\n    underLine: string;\n    description: string;\n    preview: string;\n    comments: string;\n  };\n};\n\n/* flex grid-ul este fluid, de 13x6, depinzand de breakpoints */\nconst postStyles = (theme: Theme) =>\n  createStyles({\n    post: {\n      padding: theme.spacing(2.3),\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 4,\n      boxShadow: `1px 1px 3px ${theme.palette.action.disabledBackground}`,\n      [theme.breakpoints.down('xs')]: {\n        padding: '12px 8px',\n      },\n    },\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginTop: theme.spacing(5),\n      paddingLeft: theme.spacing(6),\n      [theme.breakpoints.down('sm')]: {\n        paddingLeft: theme.spacing(4.5),\n      },\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        paddingLeft: theme.spacing(3),\n      },\n    },\n    top: {\n      width: '100%',\n      marginLeft: theme.spacing(3.5),\n      [theme.breakpoints.down('xs')]: {\n        marginLeft: theme.spacing(0),\n        marginTop: theme.spacing(2),\n      },\n    },\n    info: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '15%',\n      maxWidth: '63px',\n      fontWeight: 600,\n      fontSize: 17,\n      paddingTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      color: theme.palette.text.secondary,\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n        maxWidth: 'none',\n        flexDirection: 'row',\n        paddingTop: theme.spacing(0),\n        marginBottom: theme.spacing(1.2),\n      },\n      '& > span': {\n        fontSize: 13,\n        fontWeight: 500,\n        paddingTop: theme.spacing(0.54),\n        [theme.breakpoints.down('xs')]: {\n          paddingLeft: theme.spacing(2),\n        },\n      },\n    },\n    divider: {\n      display: 'none',\n      [theme.breakpoints.down('xs')]: {\n        display: 'block',\n      },\n    },\n    actionVote: {\n      color: `${theme.palette.text.primary} !important`,\n      marginRight: theme.spacing(1.2),\n      cursor: 'default',\n      '& .MuiButton-startIcon': {\n        marginRight: theme.spacing(0.3),\n      },\n    },\n    panel: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: theme.spacing(1),\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n      },\n      '& > a': {\n        color: 'inherit',\n        textDecoration: 'none',\n        fontWeight: 500,\n        marginLeft: theme.spacing(2),\n        '&:hover': {\n          textDecoration: 'underline',\n        },\n      },\n      '& > time': {\n        fontSize: 13,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing(1.3),\n        [theme.breakpoints.down('xs')]: {\n          marginLeft: theme.spacing(2.1),\n        },\n      },\n    },\n    title: {\n      fontWeight: 500,\n      fontSize: 23,\n      widht: 'inherit',\n      maxWidth: '85%',\n      marginTop: theme.spacing(3.5),\n      [theme.breakpoints.down('xs')]: {\n        maxWidth: '95%',\n        fontSize: 20,\n      },\n    },\n    underLine: {\n      width: 120,\n      height: 5,\n      backgroundColor: theme.palette.clrReddit,\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(8),\n      [theme.breakpoints.down('xs')]: {\n        marginBottom: theme.spacing(5),\n      },\n    },\n    body: {\n      marginTop: theme.spacing(3),\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      maxWidth: '845px',\n    },\n    description: {\n      fontSize: 16,\n      lineHeight: 1.5,\n      marginBottom: theme.spacing(3),\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(1),\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      [theme.breakpoints.down('sm')]: {\n        paddingLeft: theme.spacing(4.5),\n      },\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(3),\n      },\n      '& a': {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n        fontWeight: 600,\n        '&:hover': {\n          textDecoration: 'underline',\n        },\n      },\n      '& p': {\n        margin: 0,\n        marginBottom: theme.spacing(2),\n      },\n    },\n    preview: {\n      width: '100%',\n    },\n    comments: {\n      marginTop: theme.spacing(7),\n      paddingLeft: theme.spacing(6),\n      maxWidth: '845px',\n      [theme.breakpoints.down('sm')]: {\n        paddingLeft: theme.spacing(4.5),\n      },\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        paddingLeft: theme.spacing(3),\n      },\n      '& > h2': {\n        fontSize: 20,\n        marginBottom: theme.spacing(2.5),\n      },\n      '& > ul': {\n        paddingLeft: theme.spacing(0),\n      },\n    },\n  });\n\nexport const StyledBreadcrumb = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.action.selected,\n    height: theme.spacing(3),\n    color: theme.palette.text.disabled,\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.action.disabledBackground,\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.action.disabledBackground, 0.12),\n    },\n  },\n}))(Chip) as typeof Chip;\n\nexport default postStyles;\n","/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  withStyles,\n  Tooltip,\n  Divider,\n  Avatar,\n  Breadcrumbs,\n  Button,\n} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { fd } from '../../helpers';\nimport postStyles, { StyledBreadcrumb, StyleProps } from './post.styles';\nimport useFetch from '../../hooks/useFetch';\nimport { getPost } from '../../features/post/postSlice';\n\ntype ParamsProps = {\n  id: string;\n  subredditName: string;\n};\n\ntype TState = {\n  data: {\n    post: any;\n    comments: any;\n  };\n  isLoading: boolean;\n  isError: boolean;\n  error: string | null;\n};\n\nconst Post: React.FC<StyleProps> = ({ classes }) => {\n  const { subredditName, id } = useParams<ParamsProps>();\n\n  const { post: postState } = useFetch({\n    action: getPost,\n    params: [subredditName, id],\n  });\n  const {\n    data: { post, comments },\n    isLoading,\n    isError,\n    error,\n  }: TState = postState;\n\n  if (isError) {\n    return (\n      <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request — <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout aside>\n        <article className={classes.post} aria-label=\"post content\">\n          <Skeleton type=\"post\" />\n        </article>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout aside>\n      <article className={classes.post} aria-label=\"post content\">\n        {/* Scheletul cardului de postari exportat in pagina */}\n        <Breadcrumbs maxItems={2} aria-label=\"breadcrumbs\" component=\"nav\">\n          <StyledBreadcrumb\n            component={Link}\n            to=\"/\"\n            label=\"Home\"\n            clickable\n            icon={<HomeIcon fontSize=\"small\" />}\n          />\n          <StyledBreadcrumb\n            component={Link}\n            to=\"/subreddits/\"\n            label=\"Subreddits\"\n            clickable\n          />\n          <StyledBreadcrumb\n            component={Link}\n            to={`/subreddit/${post.subreddit}`}\n            label={post.subreddit}\n            clickable\n          />\n          <StyledBreadcrumb label={post.name} disabled />\n        </Breadcrumbs>\n\n        <header className={classes.header} aria-label=\"post head\">\n          <aside className={classes.info}>\n            <Tooltip\n              placement=\"top\"\n              title=\"Upvotes\"\n              aria-label=\"upvotes count\"\n              arrow\n            >\n              <Button\n                startIcon={<PublishIcon />}\n                size=\"small\"\n                classes={{ root: classes.actionVote }}\n                disableRipple\n                disableFocusRipple\n              >\n                {fd.shortenLargeNumber(post.ups)}\n              </Button>\n            </Tooltip>\n\n            <span>{post.upvote_ratio * 100}% ratio</span>\n          </aside>\n\n          {/* Orientare dinamica pentru Responsive design, in functie de orientarea ecranului pe mobil */}\n          <Divider orientation=\"vertical\" flexItem />\n          <Divider orientation=\"horizontal\" className={classes.divider} />\n          <div className={classes.top} aria-label=\"article head\">\n            <div className={classes.panel}>\n              <Avatar alt={post.author} src={post.thumbnail} />\n              <div className={classes.wrapper}>\n                <Link\n                  aria-label=\"author name\"\n                  style={{\n                    color:\n                      post.author_flair_background_color &&\n                      post.author_flair_background_color,\n                  }}\n                  to={`/profile/${post.author}`}\n                >\n                  {post.author}\n                </Link>\n                <time aria-label=\"time posted\">\n                  {post?.created_utc && fd.getTimeFromNow(post.created_utc)}\n                </time>\n              </div>\n            </div>\n            <h1 className={classes.title}>{post.title}</h1>\n            <div\n              className={classes.underLine}\n              style={{\n                backgroundColor:\n                  post.author_flair_background_color &&\n                  post.author_flair_background_color,\n              }}\n            />\n          </div>\n        </header>\n\n        <section aria-label=\"post body\" className={classes.body}>\n          {post.selftext && (\n            <p className={classes.description}>\n              <ReactMarkdown plugins={[gfm]} children={post.selftext} />\n            </p>\n          )}\n\n          {post.post_hint === 'image' && (\n            <a\n              href={post.url_overridden_by_dest}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                alt={post.title}\n                src={post.url_overridden_by_dest}\n                className={classes.preview}\n              />\n            </a>\n          )}\n        </section>\n\n        {comments && comments.length > 0 ? (\n          <section aria-label=\"discussion list\" className={classes.comments}>\n            <h2>Discussions</h2>\n            <ul>\n              {comments.map((comment: any) => (\n                <Card\n                  component=\"li\"\n                  type=\"comment\"\n                  commentProps={{ data: comment, postId: post.id }}\n                  key={comment.id}\n                />\n              ))}\n            </ul>\n          </section>\n        ) : null}\n      </article>\n    </Layout>\n  );\n};\n\nexport default withStyles(postStyles)(Post);\n"],"sourceRoot":""}