{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{withStyles,Card,CardHeader,CardMedia,CardActions,CardContent,Button,Typography,Avatar,Chip}from'@material-ui/core';import ReplyAllIcon from'@material-ui/icons/ReplyAll';import subredditCardStyles from'./subredditCard.styles';import{fd}from'../../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SubredditCard=function SubredditCard(_ref){var classes=_ref.classes,data=_ref.data;if(!data)return null;var shortDescription=data.public_description||data.description.split('\\n')[0];var headerPreview=data.banner_img||\"\".concat(process.env.PUBLIC_URL,\"/images/subreddit_placeholder.png\");var timeSinceCreated=fd.getTimeFromNow(data.created_utc,true);var formatedSubscribers=fd.shortenLargeNumber(data.subscribers);return/*#__PURE__*/_jsxs(Card,{className:classes.root,children:[/*#__PURE__*/_jsx(CardHeader,{avatar:/*#__PURE__*/_jsx(Avatar,{\"aria-label\":\"recipe\",src:data.icon_img,alt:data.title}),title:data.display_name_prefixed,subheader:\"a community for \".concat(timeSinceCreated),component:Link,to:\"/subreddit/\".concat(data.display_name),className:classes.header}),/*#__PURE__*/_jsx(CardMedia,{className:classes.media,image:headerPreview,title:data.title,component:Link,to:\"/subreddit/\".concat(data.display_name)}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Chip,{variant:\"outlined\",color:\"primary\",label:\"\".concat(formatedSubscribers,\" subscribers\")}),/*#__PURE__*/_jsxs(\"div\",{className:classes.body,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"h2\",children:data.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\",children:shortDescription})]})]}),/*#__PURE__*/_jsx(CardActions,{disableSpacing:true,children:/*#__PURE__*/_jsx(Button,{\"aria-label\":\"browse subreddit\",startIcon:/*#__PURE__*/_jsx(ReplyAllIcon,{}),component:Link,to:\"/subreddit/\".concat(data.display_name),children:\"Browse subreddit\"})})]});};export default withStyles(subredditCardStyles)(SubredditCard);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/src/components/Card/subredditCard/index.tsx"],"names":["React","Link","withStyles","Card","CardHeader","CardMedia","CardActions","CardContent","Button","Typography","Avatar","Chip","ReplyAllIcon","subredditCardStyles","fd","SubredditCard","classes","data","shortDescription","public_description","description","split","headerPreview","banner_img","process","env","PUBLIC_URL","timeSinceCreated","getTimeFromNow","created_utc","formatedSubscribers","shortenLargeNumber","subscribers","root","icon_img","title","display_name_prefixed","display_name","header","media","body"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OACEC,UADF,CAEEC,IAFF,CAGEC,UAHF,CAIEC,SAJF,CAKEC,WALF,CAMEC,WANF,CAOEC,MAPF,CAQEC,UARF,CASEC,MATF,CAUEC,IAVF,KAWO,mBAXP,CAYA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,mBAAP,KAAgD,wBAAhD,CACA,OAASC,EAAT,KAAmB,kBAAnB,C,wFAsBA,GAAMC,CAAAA,aAAwD,CAAG,QAA3DA,CAAAA,aAA2D,MAGhC,IAF/BC,CAAAA,OAE+B,MAF/BA,OAE+B,CAD/BC,IAC+B,MAD/BA,IAC+B,CAC/B,GAAI,CAACA,IAAL,CAAW,MAAO,KAAP,CAEX,GAAMC,CAAAA,gBAAgB,CACpBD,IAAI,CAACE,kBAAL,EAA2BF,IAAI,CAACG,WAAL,CAAiBC,KAAjB,CAAuB,IAAvB,EAA6B,CAA7B,CAD7B,CAGA,GAAMC,CAAAA,aAAa,CACjBL,IAAI,CAACM,UAAL,YACGC,OAAO,CAACC,GAAR,CAAYC,UADf,qCADF,CAIA,GAAMC,CAAAA,gBAAgB,CAAGb,EAAE,CAACc,cAAH,CAAkBX,IAAI,CAACY,WAAvB,CAAoC,IAApC,CAAzB,CACA,GAAMC,CAAAA,mBAAmB,CAAGhB,EAAE,CAACiB,kBAAH,CAAsBd,IAAI,CAACe,WAA3B,CAA5B,CAEA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAEhB,OAAO,CAACiB,IAAzB,wBACE,KAAC,UAAD,EACE,MAAM,cACJ,KAAC,MAAD,EAAQ,aAAW,QAAnB,CAA4B,GAAG,CAAEhB,IAAI,CAACiB,QAAtC,CAAgD,GAAG,CAAEjB,IAAI,CAACkB,KAA1D,EAFJ,CAIE,KAAK,CAAElB,IAAI,CAACmB,qBAJd,CAKE,SAAS,2BAAqBT,gBAArB,CALX,CAME,SAAS,CAAE1B,IANb,CAOE,EAAE,sBAAgBgB,IAAI,CAACoB,YAArB,CAPJ,CAQE,SAAS,CAAErB,OAAO,CAACsB,MARrB,EADF,cAWE,KAAC,SAAD,EACE,SAAS,CAAEtB,OAAO,CAACuB,KADrB,CAEE,KAAK,CAAEjB,aAFT,CAGE,KAAK,CAAEL,IAAI,CAACkB,KAHd,CAIE,SAAS,CAAElC,IAJb,CAKE,EAAE,sBAAgBgB,IAAI,CAACoB,YAArB,CALJ,EAXF,cAkBE,MAAC,WAAD,yBACE,KAAC,IAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAC,SAFR,CAGE,KAAK,WAAKP,mBAAL,gBAHP,EADF,cAME,aAAK,SAAS,CAAEd,OAAO,CAACwB,IAAxB,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAC,IAAnC,UACGvB,IAAI,CAACkB,KADR,EADF,cAIE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,CAAkD,SAAS,CAAC,GAA5D,UACGjB,gBADH,EAJF,GANF,GAlBF,cAiCE,KAAC,WAAD,EAAa,cAAc,KAA3B,uBACE,KAAC,MAAD,EACE,aAAW,kBADb,CAEE,SAAS,cAAE,KAAC,YAAD,IAFb,CAGE,SAAS,CAAEjB,IAHb,CAIE,EAAE,sBAAgBgB,IAAI,CAACoB,YAArB,CAJJ,8BADF,EAjCF,GADF,CA8CD,CA9DD,CAgEA,cAAenC,CAAAA,UAAU,CAACW,mBAAD,CAAV,CAAgCE,aAAhC,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  withStyles,\n  Card,\n  CardHeader,\n  CardMedia,\n  CardActions,\n  CardContent,\n  Button,\n  Typography,\n  Avatar,\n  Chip,\n} from '@material-ui/core';\nimport ReplyAllIcon from '@material-ui/icons/ReplyAll';\nimport subredditCardStyles, { StyleProps } from './subredditCard.styles';\nimport { fd } from '../../../helpers';\n\nexport type TSubredditData = {\n  title: string;\n  display_name: string;\n  display_name_prefixed: string;\n  primary_color: string;\n  key_color: string;\n  description: string;\n  public_description: string;\n  subscribers: string;\n  header_title: string;\n  banner_img: string;\n  icon_img: string;\n  url: string;\n  created_utc: number;\n};\n\nexport type SubredditDataProps = {\n  data?: TSubredditData;\n};\n\nconst SubredditCard: React.FC<StyleProps & SubredditDataProps> = ({\n  classes,\n  data,\n}): React.ReactElement | null => {\n  if (!data) return null;\n\n  const shortDescription =\n    data.public_description || data.description.split('\\n')[0];\n\n  const headerPreview =\n    data.banner_img ||\n    `${process.env.PUBLIC_URL}/images/subreddit_placeholder.png`;\n\n  const timeSinceCreated = fd.getTimeFromNow(data.created_utc, true);\n  const formatedSubscribers = fd.shortenLargeNumber(data.subscribers);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" src={data.icon_img} alt={data.title} />\n        }\n        title={data.display_name_prefixed}\n        subheader={`a community for ${timeSinceCreated}`}\n        component={Link}\n        to={`/subreddit/${data.display_name}`}\n        className={classes.header}\n      />\n      <CardMedia\n        className={classes.media}\n        image={headerPreview}\n        title={data.title}\n        component={Link}\n        to={`/subreddit/${data.display_name}`}\n      />\n      <CardContent>\n        <Chip\n          variant=\"outlined\"\n          color=\"primary\"\n          label={`${formatedSubscribers} subscribers`}\n        />\n        <div className={classes.body}>\n          <Typography variant=\"h5\" component=\"h2\">\n            {data.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {shortDescription}\n          </Typography>\n        </div>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Button\n          aria-label=\"browse subreddit\"\n          startIcon={<ReplyAllIcon />}\n          component={Link}\n          to={`/subreddit/${data.display_name}`}\n        >\n          Browse subreddit\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default withStyles(subredditCardStyles)(SubredditCard);\n"]},"metadata":{},"sourceType":"module"}