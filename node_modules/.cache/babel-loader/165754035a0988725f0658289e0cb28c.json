{"ast":null,"code":"import React from'react';import{withStyles,Tooltip}from'@material-ui/core';import CakeIcon from'@material-ui/icons/Cake';import SidebarBase from'../sidebarBase';import Panel from'../panel';import subredditStyles from'./subreddit.styles';import{fd}from'../../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// Fetch la toate datele unui subreddit ca sa fie preluate in preview\nvar Subreddit=function Subreddit(_ref){var data=_ref.data,classes=_ref.classes;var formatedSubs=fd.shortenLargeNumber(data.subscribers);var formatedActive=fd.shortenLargeNumber(data.active_user_count);var formatCreated=fd.getCreatedTime(data.created_utc);var formatSinceCreated=fd.getTimeFromNow(data.created_utc);return/*#__PURE__*/_jsx(SidebarBase,{content:/*#__PURE__*/_jsx(Panel,{title:\"Despre Comunitatea \".concat(data.display_name),content:/*#__PURE__*/_jsxs(\"div\",{className:classes.content,children:[/*#__PURE__*/_jsx(\"p\",{className:classes.desc,children:data.public_description}),/*#__PURE__*/_jsxs(\"div\",{className:classes.stats,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"\".concat(formatedSubs,\" total abona\\u021Bi\"),arrow:true,placement:\"bottom\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.frame,\"aria-label\":\"Total subscribers\",children:[/*#__PURE__*/_jsx(\"h5\",{children:formatedSubs}),/*#__PURE__*/_jsx(\"p\",{children:\"Abona\\u021Bi\"})]})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\".concat(formatedActive,\" utilizatori online\"),arrow:true,placement:\"bottom\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.frame,\"aria-label\":\"Users online\",children:[/*#__PURE__*/_jsx(\"h5\",{children:formatedActive}),/*#__PURE__*/_jsx(\"p\",{children:\"Online\"})]})})]})]}),action:/*#__PURE__*/_jsxs(\"time\",{className:classes.created,children:[/*#__PURE__*/_jsx(CakeIcon,{fontSize:\"small\"}),' ',/*#__PURE__*/_jsx(Tooltip,{title:formatSinceCreated,arrow:true,placement:\"bottom\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Creat pe \",formatCreated]})})]})})});};export default withStyles(subredditStyles)(Subreddit);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/components/Sidebar/subreddit/index.tsx"],"names":["React","withStyles","Tooltip","CakeIcon","SidebarBase","Panel","subredditStyles","fd","Subreddit","data","classes","formatedSubs","shortenLargeNumber","subscribers","formatedActive","active_user_count","formatCreated","getCreatedTime","created_utc","formatSinceCreated","getTimeFromNow","display_name","content","desc","public_description","stats","frame","created"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,OAArB,KAAoC,mBAApC,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAOC,CAAAA,eAAP,KAA6C,oBAA7C,CACA,OAASC,EAAT,KAAmB,kBAAnB,C,wFAUA;AAEA,GAAMC,CAAAA,SAAyD,CAAG,QAA5DA,CAAAA,SAA4D,MAG5D,IAFJC,CAAAA,IAEI,MAFJA,IAEI,CADJC,OACI,MADJA,OACI,CACJ,GAAMC,CAAAA,YAAY,CAAGJ,EAAE,CAACK,kBAAH,CAAsBH,IAAI,CAACI,WAA3B,CAArB,CACA,GAAMC,CAAAA,cAAc,CAAGP,EAAE,CAACK,kBAAH,CAAsBH,IAAI,CAACM,iBAA3B,CAAvB,CACA,GAAMC,CAAAA,aAAa,CAAGT,EAAE,CAACU,cAAH,CAAkBR,IAAI,CAACS,WAAvB,CAAtB,CACA,GAAMC,CAAAA,kBAAkB,CAAGZ,EAAE,CAACa,cAAH,CAAkBX,IAAI,CAACS,WAAvB,CAA3B,CAEA,mBACE,KAAC,WAAD,EACE,OAAO,cACL,KAAC,KAAD,EACE,KAAK,8BAAwBT,IAAI,CAACY,YAA7B,CADP,CAEE,OAAO,cACL,aAAK,SAAS,CAAEX,OAAO,CAACY,OAAxB,wBACE,UAAG,SAAS,CAAEZ,OAAO,CAACa,IAAtB,UAA6Bd,IAAI,CAACe,kBAAlC,EADF,cAEE,aAAK,SAAS,CAAEd,OAAO,CAACe,KAAxB,wBACE,KAAC,OAAD,EACE,KAAK,WAAKd,YAAL,uBADP,CAEE,KAAK,KAFP,CAGE,SAAS,CAAC,QAHZ,uBAKE,aAAK,SAAS,CAAED,OAAO,CAACgB,KAAxB,CAA+B,aAAW,mBAA1C,wBACE,oBAAKf,YAAL,EADF,cAEE,mCAFF,GALF,EADF,cAWE,KAAC,OAAD,EACE,KAAK,WAAKG,cAAL,uBADP,CAEE,KAAK,KAFP,CAGE,SAAS,CAAC,QAHZ,uBAKE,aAAK,SAAS,CAAEJ,OAAO,CAACgB,KAAxB,CAA+B,aAAW,cAA1C,wBACE,oBAAKZ,cAAL,EADF,cAEE,6BAFF,GALF,EAXF,GAFF,GAHJ,CA6BE,MAAM,cACJ,cAAM,SAAS,CAAEJ,OAAO,CAACiB,OAAzB,wBACE,KAAC,QAAD,EAAU,QAAQ,CAAC,OAAnB,EADF,CACgC,GADhC,cAEE,KAAC,OAAD,EAAS,KAAK,CAAER,kBAAhB,CAAoC,KAAK,KAAzC,CAA0C,SAAS,CAAC,QAApD,uBACE,iCAAaH,aAAb,GADF,EAFF,GA9BJ,EAFJ,EADF,CA4CD,CArDD,CAuDA,cAAef,CAAAA,UAAU,CAACK,eAAD,CAAV,CAA4BE,SAA5B,CAAf","sourcesContent":["import React from 'react';\nimport { withStyles, Tooltip } from '@material-ui/core';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport SidebarBase from '../sidebarBase';\nimport Panel from '../panel';\nimport subredditStyles, { TStyleProps } from './subreddit.styles';\nimport { fd } from '../../../helpers';\n\nexport type TSidebarData = {\n  display_name: string;\n  public_description: string;\n  active_user_count: number;\n  subscribers: number;\n  created_utc: number;\n};\n\n// Fetch la toate datele unui subreddit ca sa fie preluate in preview\n\nconst Subreddit: React.FC<{ data: TSidebarData } & TStyleProps> = ({\n  data,\n  classes,\n}) => {\n  const formatedSubs = fd.shortenLargeNumber(data.subscribers);\n  const formatedActive = fd.shortenLargeNumber(data.active_user_count);\n  const formatCreated = fd.getCreatedTime(data.created_utc);\n  const formatSinceCreated = fd.getTimeFromNow(data.created_utc);\n\n  return (\n    <SidebarBase\n      content={\n        <Panel\n          title={`Despre Comunitatea ${data.display_name}`}\n          content={\n            <div className={classes.content}>\n              <p className={classes.desc}>{data.public_description}</p>\n              <div className={classes.stats}>\n                <Tooltip\n                  title={`${formatedSubs} total abonați`}\n                  arrow\n                  placement=\"bottom\"\n                >\n                  <div className={classes.frame} aria-label=\"Total subscribers\">\n                    <h5>{formatedSubs}</h5>\n                    <p>Abonați</p>\n                  </div>\n                </Tooltip>\n                <Tooltip\n                  title={`${formatedActive} utilizatori online`}\n                  arrow\n                  placement=\"bottom\"\n                >\n                  <div className={classes.frame} aria-label=\"Users online\">\n                    <h5>{formatedActive}</h5>\n                    <p>Online</p>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          }\n          action={\n            <time className={classes.created}>\n              <CakeIcon fontSize=\"small\" />{' '}\n              <Tooltip title={formatSinceCreated} arrow placement=\"bottom\">\n                <p>Creat pe {formatCreated}</p>\n              </Tooltip>\n            </time>\n          }\n        />\n      }\n    />\n  );\n};\n\nexport default withStyles(subredditStyles)(Subreddit);\n"]},"metadata":{},"sourceType":"module"}