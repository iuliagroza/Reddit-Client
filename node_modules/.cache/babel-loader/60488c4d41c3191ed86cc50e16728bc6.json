{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\pages\\\\subreddits\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { getSubreddits } from '../../features/subreddits/subredditsSlice';\nimport useFetch from '../../hooks/useFetch'; // TODO: Invata sa faci material-ui grid-ul fluid, ca sa nu mai forteze card-urile care nu sunt de aceeasi inaltime sa fie pe acelasi rand\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subreddits = () => {\n  _s();\n\n  const {\n    subreddits: {\n      subreddits,\n      isLoading,\n      isError,\n      error\n    }\n  } = useFetch({\n    action: getSubreddits\n  });\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \"There was an error with your request \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: Array.from(new Array(6)).map((_, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 4,\n          md: 4,\n          sm: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            type: \"subreddit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: subreddits.map(subreddit => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: 4,\n        md: 4,\n        sm: 6,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          type: \"subreddit\",\n          subredditProps: {\n            data: subreddit\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, subreddit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Subreddits, \"MtKfX4TaMwDzM6t1mFYErJ4MjD0=\", false, function () {\n  return [useFetch];\n});\n\n_c = Subreddits;\nexport default Subreddits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subreddits\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/pages/subreddits/index.tsx"],"names":["React","Grid","Alert","AlertTitle","Layout","Card","Skeleton","getSubreddits","useFetch","Subreddits","subreddits","isLoading","isError","error","action","Array","from","map","_","idx","subreddit","data","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB,C,CAEA;;;;AACA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM;AACJC,IAAAA,UAAU,EAAE;AAAEA,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA,OAAzB;AAAkCC,MAAAA;AAAlC;AADR,MAEFL,QAAQ,CAAC;AAAEM,IAAAA,MAAM,EAAEP;AAAV,GAAD,CAFZ;;AAIA,MAAIK,OAAJ,EAAa;AACX,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,+DAEyC;AAAA,oBAASC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,MAAIF,SAAJ,EAAe;AACb,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,kBACGI,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,CAAV,CAAX,EAAyBE,GAAzB,CAA6B,CAACC,CAAD,EAAIC,GAAJ,kBAC5B,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,CAA7B;AAAgC,UAAA,EAAE,EAAE,EAApC;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,WAA6CA,GAA7C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGT,UAAU,CAACO,GAAX,CAAgBG,SAAD,iBACd,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,EAApC;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAuB,UAAA,cAAc,EAAE;AAAEC,YAAAA,IAAI,EAAED;AAAR;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF,SAA6CA,SAAS,CAACE,EAAvD;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCD;;GAAMb,U;UAGAD,Q;;;KAHAC,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { getSubreddits } from '../../features/subreddits/subredditsSlice';\nimport useFetch from '../../hooks/useFetch';\n\n// TODO: Invata sa faci material-ui grid-ul fluid, ca sa nu mai forteze card-urile care nu sunt de aceeasi inaltime sa fie pe acelasi rand\nconst Subreddits: React.FC = () => {\n  const {\n    subreddits: { subreddits, isLoading, isError, error },\n  } = useFetch({ action: getSubreddits });\n\n  if (isError) {\n    return (\n      <Layout>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request â€” <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout>\n        <Grid container spacing={3}>\n          {Array.from(new Array(6)).map((_, idx) => (\n            <Grid item xl={4} md={4} sm={6} xs={12} key={idx}>\n              <Skeleton type=\"subreddit\" />\n            </Grid>\n          ))}\n        </Grid>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <Grid container spacing={3}>\n        {subreddits.map((subreddit: any) => (\n          <Grid item xl={4} md={4} sm={6} xs={12} key={subreddit.id}>\n            <Card type=\"subreddit\" subredditProps={{ data: subreddit }} />\n          </Grid>\n        ))}\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default Subreddits;\n"]},"metadata":{},"sourceType":"module"}