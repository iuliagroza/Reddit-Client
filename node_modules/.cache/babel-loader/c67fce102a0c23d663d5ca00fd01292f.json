{"ast":null,"code":"/* eslint-disable react/no-children-prop */import React from'react';import ReactMarkdown from'react-markdown';import gfm from'remark-gfm';import{Link,useParams}from'react-router-dom';import{withStyles,Tooltip,Divider,Avatar,Breadcrumbs,Button}from'@material-ui/core';import{Alert,AlertTitle}from'@material-ui/lab';import HomeIcon from'@material-ui/icons/Home';import PublishIcon from'@material-ui/icons/Publish';import Layout from'../../components/Layout';import Card from'../../components/Card';import Skeleton from'../../components/Skeleton';import{fd}from'../../helpers';import postStyles,{StyledBreadcrumb}from'./post.styles';import useFetch from'../../hooks/useFetch';import{getPost}from'../../features/post/postSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Post=function Post(_ref){var classes=_ref.classes;var _useParams=useParams(),subredditName=_useParams.subredditName,id=_useParams.id;var _useFetch=useFetch({action:getPost,params:[subredditName,id]}),postState=_useFetch.post;var _postState$data=postState.data,post=_postState$data.post,comments=_postState$data.comments,isLoading=postState.isLoading,isError=postState.isError,error=postState.error;if(isError){return/*#__PURE__*/_jsx(Layout,{navigation:true,aside:true,sidebarProps:{type:'filter'},children:/*#__PURE__*/_jsxs(Alert,{severity:\"error\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),\"There was an error with your request \\u2014 \",/*#__PURE__*/_jsx(\"strong\",{children:error})]})});}if(isLoading){return/*#__PURE__*/_jsx(Layout,{aside:true,children:/*#__PURE__*/_jsx(\"article\",{className:classes.post,\"aria-label\":\"post content\",children:/*#__PURE__*/_jsx(Skeleton,{type:\"post\"})})});}return/*#__PURE__*/_jsx(Layout,{aside:true,children:/*#__PURE__*/_jsxs(\"article\",{className:classes.post,\"aria-label\":\"post content\",children:[/*#__PURE__*/_jsxs(Breadcrumbs,{maxItems:2,\"aria-label\":\"breadcrumbs\",component:\"nav\",children:[/*#__PURE__*/_jsx(StyledBreadcrumb,{component:Link,to:\"/\",label:\"Home\",clickable:true,icon:/*#__PURE__*/_jsx(HomeIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(StyledBreadcrumb,{component:Link,to:\"/subreddits/\",label:\"Subreddits\",clickable:true}),/*#__PURE__*/_jsx(StyledBreadcrumb,{component:Link,to:\"/subreddit/\".concat(post.subreddit),label:post.subreddit,clickable:true}),/*#__PURE__*/_jsx(StyledBreadcrumb,{label:post.name,disabled:true})]}),/*#__PURE__*/_jsxs(\"header\",{className:classes.header,\"aria-label\":\"post head\",children:[/*#__PURE__*/_jsxs(\"aside\",{className:classes.info,children:[/*#__PURE__*/_jsx(Tooltip,{placement:\"top\",title:\"Upvotes\",\"aria-label\":\"upvotes count\",arrow:true,children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(PublishIcon,{}),size:\"small\",classes:{root:classes.actionVote},disableRipple:true,disableFocusRipple:true,children:fd.shortenLargeNumber(post.ups)})}),/*#__PURE__*/_jsxs(\"span\",{children:[post.upvote_ratio*100,\"% ratio\"]})]}),/*#__PURE__*/_jsx(Divider,{orientation:\"vertical\",flexItem:true}),/*#__PURE__*/_jsx(Divider,{orientation:\"horizontal\",className:classes.divider}),/*#__PURE__*/_jsxs(\"div\",{className:classes.top,\"aria-label\":\"article head\",children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.panel,children:[/*#__PURE__*/_jsx(Avatar,{alt:post.author,src:post.thumbnail}),/*#__PURE__*/_jsxs(\"div\",{className:classes.wrapper,children:[/*#__PURE__*/_jsx(Link,{\"aria-label\":\"author name\",style:{color:post.author_flair_background_color&&post.author_flair_background_color},to:\"/profile/\".concat(post.author),children:post.author}),/*#__PURE__*/_jsx(\"time\",{\"aria-label\":\"time posted\",children:(post===null||post===void 0?void 0:post.created_utc)&&fd.getTimeFromNow(post.created_utc)})]})]}),/*#__PURE__*/_jsx(\"h1\",{className:classes.title,children:post.title}),/*#__PURE__*/_jsx(\"div\",{className:classes.underLine,style:{backgroundColor:post.author_flair_background_color&&post.author_flair_background_color}})]})]}),/*#__PURE__*/_jsxs(\"section\",{\"aria-label\":\"post body\",className:classes.body,children:[post.selftext&&/*#__PURE__*/_jsx(\"p\",{className:classes.description,children:/*#__PURE__*/_jsx(ReactMarkdown,{plugins:[gfm],children:post.selftext})}),post.post_hint==='image'&&/*#__PURE__*/_jsx(\"a\",{href:post.url_overridden_by_dest,target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"img\",{alt:post.title,src:post.url_overridden_by_dest,className:classes.preview})})]}),comments&&comments.length>0?/*#__PURE__*/_jsxs(\"section\",{\"aria-label\":\"discussion list\",className:classes.comments,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Discussions\"}),/*#__PURE__*/_jsx(\"ul\",{children:comments.map(function(comment){return/*#__PURE__*/_jsx(Card,{component:\"li\",type:\"comment\",commentProps:{data:comment,postId:post.id}},comment.id);})})]}):null]})});};export default withStyles(postStyles)(Post);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/pages/post/index.tsx"],"names":["React","ReactMarkdown","gfm","Link","useParams","withStyles","Tooltip","Divider","Avatar","Breadcrumbs","Button","Alert","AlertTitle","HomeIcon","PublishIcon","Layout","Card","Skeleton","fd","postStyles","StyledBreadcrumb","useFetch","getPost","Post","classes","subredditName","id","action","params","postState","post","data","comments","isLoading","isError","error","type","subreddit","name","header","info","root","actionVote","shortenLargeNumber","ups","upvote_ratio","divider","top","panel","author","thumbnail","wrapper","color","author_flair_background_color","created_utc","getTimeFromNow","title","underLine","backgroundColor","body","selftext","description","post_hint","url_overridden_by_dest","preview","length","map","comment","postId"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  withStyles,\n  Tooltip,\n  Divider,\n  Avatar,\n  Breadcrumbs,\n  Button,\n} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { fd } from '../../helpers';\nimport postStyles, { StyledBreadcrumb, StyleProps } from './post.styles';\nimport useFetch from '../../hooks/useFetch';\nimport { getPost } from '../../features/post/postSlice';\n\ntype ParamsProps = {\n  id: string;\n  subredditName: string;\n};\n\ntype TState = {\n  data: {\n    post: any;\n    comments: any;\n  };\n  isLoading: boolean;\n  isError: boolean;\n  error: string | null;\n};\n\nconst Post: React.FC<StyleProps> = ({ classes }) => {\n  const { subredditName, id } = useParams<ParamsProps>();\n\n  const { post: postState } = useFetch({\n    action: getPost,\n    params: [subredditName, id],\n  });\n  const {\n    data: { post, comments },\n    isLoading,\n    isError,\n    error,\n  }: TState = postState;\n\n  if (isError) {\n    return (\n      <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request — <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout aside>\n        <article className={classes.post} aria-label=\"post content\">\n          <Skeleton type=\"post\" />\n        </article>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout aside>\n      <article className={classes.post} aria-label=\"post content\">\n        <Breadcrumbs maxItems={2} aria-label=\"breadcrumbs\" component=\"nav\">\n          <StyledBreadcrumb\n            component={Link}\n            to=\"/\"\n            label=\"Home\"\n            clickable\n            icon={<HomeIcon fontSize=\"small\" />}\n          />\n          <StyledBreadcrumb\n            component={Link}\n            to=\"/subreddits/\"\n            label=\"Subreddits\"\n            clickable\n          />\n          <StyledBreadcrumb\n            component={Link}\n            to={`/subreddit/${post.subreddit}`}\n            label={post.subreddit}\n            clickable\n          />\n          <StyledBreadcrumb label={post.name} disabled />\n        </Breadcrumbs>\n\n        <header className={classes.header} aria-label=\"post head\">\n          <aside className={classes.info}>\n            <Tooltip\n              placement=\"top\"\n              title=\"Upvotes\"\n              aria-label=\"upvotes count\"\n              arrow\n            >\n              <Button\n                startIcon={<PublishIcon />}\n                size=\"small\"\n                classes={{ root: classes.actionVote }}\n                disableRipple\n                disableFocusRipple\n              >\n                {fd.shortenLargeNumber(post.ups)}\n              </Button>\n            </Tooltip>\n\n            <span>{post.upvote_ratio * 100}% ratio</span>\n          </aside>\n          <Divider orientation=\"vertical\" flexItem />\n          <Divider orientation=\"horizontal\" className={classes.divider} />\n          <div className={classes.top} aria-label=\"article head\">\n            <div className={classes.panel}>\n              <Avatar alt={post.author} src={post.thumbnail} />\n              <div className={classes.wrapper}>\n                <Link\n                  aria-label=\"author name\"\n                  style={{\n                    color:\n                      post.author_flair_background_color &&\n                      post.author_flair_background_color,\n                  }}\n                  to={`/profile/${post.author}`}\n                >\n                  {post.author}\n                </Link>\n                <time aria-label=\"time posted\">\n                  {post?.created_utc && fd.getTimeFromNow(post.created_utc)}\n                </time>\n              </div>\n            </div>\n            <h1 className={classes.title}>{post.title}</h1>\n            <div\n              className={classes.underLine}\n              style={{\n                backgroundColor:\n                  post.author_flair_background_color &&\n                  post.author_flair_background_color,\n              }}\n            />\n          </div>\n        </header>\n\n        <section aria-label=\"post body\" className={classes.body}>\n          {post.selftext && (\n            <p className={classes.description}>\n              <ReactMarkdown plugins={[gfm]} children={post.selftext} />\n            </p>\n          )}\n\n          {post.post_hint === 'image' && (\n            <a\n              href={post.url_overridden_by_dest}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                alt={post.title}\n                src={post.url_overridden_by_dest}\n                className={classes.preview}\n              />\n            </a>\n          )}\n        </section>\n\n        {comments && comments.length > 0 ? (\n          <section aria-label=\"discussion list\" className={classes.comments}>\n            <h2>Discussions</h2>\n            <ul>\n              {comments.map((comment: any) => (\n                <Card\n                  component=\"li\"\n                  type=\"comment\"\n                  commentProps={{ data: comment, postId: post.id }}\n                  key={comment.id}\n                />\n              ))}\n            </ul>\n          </section>\n        ) : null}\n      </article>\n    </Layout>\n  );\n};\n\nexport default withStyles(postStyles)(Post);\n"]},"metadata":{},"sourceType":"module"}