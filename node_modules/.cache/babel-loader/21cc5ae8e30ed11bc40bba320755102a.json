{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\components\\\\Card\\\\commentCard\\\\index.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Button, Tooltip } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ShareIcon from '@material-ui/icons/Share';\nimport commentsCardStyles from './commentsCard.styles';\nimport { fd, copyToClipboard } from '../../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  classes,\n  component: Component,\n  data,\n  postId\n}) => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n  const timeSinceCreated = fd.getTimeFromNow(data.created_utc);\n  const formatSinceEdited = fd.getTimeFromNow(data.edited);\n  const formatedUpvotes = fd.shortenLargeNumber(data.ups);\n  const upvotes = data.ups > 1 ? 'voturi' : 'vot';\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${postId}`;\n  let authorDisplay;\n\n  if (data.author !== '[deleted]') {\n    authorDisplay = /*#__PURE__*/_jsxDEV(Link, {\n      \"data-testid\": \"author\",\n      to: `/profile/${data.author}`,\n      children: data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    authorDisplay = /*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-testid\": \"author\",\n      children: data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Component, {\n    className: classes.root,\n    id: data.id,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      \"aria-label\": \"comment head\",\n      children: [authorDisplay, /*#__PURE__*/_jsxDEV(\"time\", {\n        children: timeSinceCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), data.edited && /*#__PURE__*/_jsxDEV(\"time\", {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: [' ', \"- editat \", formatSinceEdited]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.body,\n      \"aria-label\": \"comment body\",\n      \"data-testid\": \"body\",\n      children: data.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      \"aria-label\": \"comment actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(PublishIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this),\n        size: \"small\",\n        classes: {\n          root: classes.actionVote\n        },\n        disabled: true,\n        children: [formatedUpvotes, \" \", upvotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"right\",\n        title: \"Copy\",\n        \"aria-label\": \"copy\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => copyToClipboard(shareUrl),\n          startIcon: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 24\n          }, this),\n          size: \"small\",\n          children: \"Distribuie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CommentCard;\nexport default withStyles(commentsCardStyles)(CommentCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/components/Card/commentCard/index.tsx"],"names":["React","Link","withStyles","Button","Tooltip","PublishIcon","ShareIcon","commentsCardStyles","fd","copyToClipboard","CommentCard","classes","component","Component","data","postId","Error","timeSinceCreated","getTimeFromNow","created_utc","formatSinceEdited","edited","formatedUpvotes","shortenLargeNumber","ups","upvotes","url","process","env","REACT_APP_VERCEL_URL","shareUrl","subreddit","authorDisplay","author","root","id","header","fontStyle","body","actions","actionVote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Button, Tooltip } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ShareIcon from '@material-ui/icons/Share';\nimport commentsCardStyles, { StyleProps } from './commentsCard.styles';\nimport { fd, copyToClipboard } from '../../../helpers';\n\nexport type TCommentData = {\n  id: string;\n  author: string;\n  body: string;\n  body_html: string;\n  created_utc: number;\n  edited: number;\n  permalink: string;\n  ups: number;\n  subreddit: string;\n};\n\nexport interface CommentDataProps {\n  component?: React.ElementType;\n  data?: TCommentData;\n  postId?: string;\n}\n\nconst CommentCard: React.FC<CommentDataProps & StyleProps> = ({\n  classes,\n  component: Component,\n  data,\n  postId,\n}): React.ReactElement | null => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n\n  const timeSinceCreated = fd.getTimeFromNow(data.created_utc);\n  const formatSinceEdited = fd.getTimeFromNow(data.edited);\n  const formatedUpvotes = fd.shortenLargeNumber(data.ups);\n  const upvotes = data.ups > 1 ? 'voturi' : 'vot';\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${postId}`;\n\n  let authorDisplay;\n  if (data.author !== '[deleted]') {\n    authorDisplay = (\n      <Link data-testid=\"author\" to={`/profile/${data.author}`}>\n        {data.author}\n      </Link>\n    );\n  } else {\n    authorDisplay = <span data-testid=\"author\">{data.author}</span>;\n  }\n\n  return (\n    <Component className={classes.root} id={data.id}>\n      <div className={classes.header} aria-label=\"comment head\">\n        {authorDisplay}\n        <time>{timeSinceCreated}</time>\n        {data.edited && (\n          <time style={{ fontStyle: 'italic' }}>\n            {' '}\n            - editat {formatSinceEdited}\n          </time>\n        )}\n      </div>\n      <p className={classes.body} aria-label=\"comment body\" data-testid=\"body\">\n        {data.body}\n      </p>\n      <div className={classes.actions} aria-label=\"comment actions\">\n        <Button\n          startIcon={<PublishIcon />}\n          size=\"small\"\n          classes={{ root: classes.actionVote }}\n          disabled\n        >\n          {formatedUpvotes} {upvotes}\n        </Button>\n        <Tooltip placement=\"right\" title=\"Copy\" aria-label=\"copy\" arrow>\n          <Button\n            onClick={() => copyToClipboard(shareUrl)}\n            startIcon={<ShareIcon />}\n            size=\"small\"\n          >\n            Distribuie\n          </Button>\n        </Tooltip>\n      </div>\n    </Component>\n  );\n};\n\nexport default withStyles(commentsCardStyles)(CommentCard);\n"]},"metadata":{},"sourceType":"module"}