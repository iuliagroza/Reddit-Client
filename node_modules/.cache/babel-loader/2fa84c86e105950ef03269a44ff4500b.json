{"ast":null,"code":"import _defineProperty from\"C:/Users/dell/Desktop/Info/Projects/RedditClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/dell/Desktop/Info/Projects/RedditClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/dell/Desktop/Info/Projects/RedditClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import API from'../../lib/API';var initialState={status:'idle',error:null,isLoading:true,isError:false,page:{before:null,after:null},profile:{},data:{posts:[],comments:[]}};export var getUserByName=createAsyncThunk('user/getUserByName',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userName){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.getUser(userName);case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var getUserPosts=createAsyncThunk('user/getUserPosts',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userName){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return API.getUserPosts(userName);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());var userSlice=createSlice({name:'user',initialState:initialState,reducers:{},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,String(getUserByName.pending),function(state){state.status='pending';}),_defineProperty(_extraReducers,String(getUserByName.fulfilled),function(state,_ref3){var payload=_ref3.payload;state.status='succeeded';state.isError=false;state.isLoading=false;state.profile=payload;}),_defineProperty(_extraReducers,String(getUserByName.rejected),function(state,_ref4){var payload=_ref4.payload;state.status='failed';state.isError=true;state.isLoading=false;state.error=payload;}),_defineProperty(_extraReducers,String(getUserPosts.pending),function(state){state.status='pending';}),_defineProperty(_extraReducers,String(getUserPosts.fulfilled),function(state,_ref5){var payload=_ref5.payload;state.status='succeeded';state.isError=false;state.isLoading=false;state.data.posts=payload.posts;state.data.comments=payload.comments;state.page.after=payload.after;state.page.before=payload.before;}),_defineProperty(_extraReducers,String(getUserPosts.rejected),function(state,_ref6){var payload=_ref6.payload;state.status='failed';state.isError=true;state.isLoading=false;state.error=payload;}),_extraReducers)});export default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/features/user/userSlice.ts"],"names":["createAsyncThunk","createSlice","API","initialState","status","error","isLoading","isError","page","before","after","profile","data","posts","comments","getUserByName","userName","getUser","response","getUserPosts","userSlice","name","reducers","extraReducers","String","pending","state","fulfilled","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IFetch, TPage } from '../index';\nimport API from '../../lib/API';\n\ninterface IResponse extends TPage {\n  posts: object[];\n  comments: object[];\n}\n\nexport interface IPosts extends IFetch {\n  profile: object | any;\n  data: {\n    posts: object[];\n    comments: object[];\n  };\n}\n\nconst initialState: IPosts = {\n  status: 'idle',\n  error: null,\n  isLoading: true,\n  isError: false,\n  page: {\n    before: null,\n    after: null,\n  },\n  profile: {},\n  data: {\n    posts: [],\n    comments: [],\n  },\n};\n\nexport const getUserByName = createAsyncThunk(\n  'user/getUserByName',\n  async (userName: string) => {\n    const response = await API.getUser(userName);\n\n    return response;\n  },\n);\n\nexport const getUserPosts = createAsyncThunk(\n  'user/getUserPosts',\n  async (userName: string) => {\n    const response: IResponse = await API.getUserPosts(userName);\n\n    return response;\n  },\n);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [String(getUserByName.pending)]: (state) => {\n      state.status = 'pending';\n    },\n    [String(getUserByName.fulfilled)]: (\n      state,\n      { payload }: PayloadAction<object>,\n    ) => {\n      state.status = 'succeeded';\n      state.isError = false;\n      state.isLoading = false;\n      state.profile = payload;\n    },\n    [String(getUserByName.rejected)]: (\n      state,\n      { payload }: PayloadAction<string>,\n    ) => {\n      state.status = 'failed';\n      state.isError = true;\n      state.isLoading = false;\n      state.error = payload;\n    },\n    [String(getUserPosts.pending)]: (state) => {\n      state.status = 'pending';\n    },\n    [String(getUserPosts.fulfilled)]: (\n      state,\n      { payload }: PayloadAction<IResponse>,\n    ) => {\n      state.status = 'succeeded';\n      state.isError = false;\n      state.isLoading = false;\n      state.data.posts = payload.posts;\n      state.data.comments = payload.comments;\n      state.page.after = payload.after;\n      state.page.before = payload.before;\n    },\n    [String(getUserPosts.rejected)]: (\n      state,\n      { payload }: PayloadAction<string>,\n    ) => {\n      state.status = 'failed';\n      state.isError = true;\n      state.isLoading = false;\n      state.error = payload;\n    },\n  },\n});\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}