{"ast":null,"code":"/* eslint-disable global-require */ /* eslint-disable @typescript-eslint/no-var-requires */import{configureStore}from'@reduxjs/toolkit';import rootReducer from'./rootReducer';/* Da-i fetch la datele primite pentru a le stoca in storage */var store=configureStore({reducer:rootReducer,devTools:process.env.NODE_ENV==='development'});if(process.env.NODE_ENV==='development'&&module.hot){module.hot.accept('./rootReducer',function(){var newRootReducer=require('./rootReducer').default;store.replaceReducer(newRootReducer);});}export default store;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/store/store.ts"],"names":["configureStore","rootReducer","store","reducer","devTools","process","env","NODE_ENV","module","hot","accept","newRootReducer","require","default","replaceReducer"],"mappings":"AAAA,mC,CACA,uDACA,OAAiBA,cAAjB,KAAoD,kBAApD,CACA,MAAOC,CAAAA,WAAP,KAAuC,eAAvC,CAEA,+DACA,GAAMC,CAAAA,KAAK,CAAGF,cAAc,CAAC,CAC3BG,OAAO,CAAEF,WADkB,CAE3BG,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAFR,CAAD,CAA5B,CAKA,GAAIF,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAAzB,EAA0CC,MAAM,CAACC,GAArD,CAA0D,CACxDD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,eAAlB,CAAmC,UAAM,CACvC,GAAMC,CAAAA,cAAc,CAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,OAAhD,CACAX,KAAK,CAACY,cAAN,CAAqBH,cAArB,EACD,CAHD,EAID,CAUD,cAAeT,CAAAA,KAAf","sourcesContent":["/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\nimport { Action, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport rootReducer, { RootState } from './rootReducer';\n\n/* Da-i fetch la datele primite pentru a le stoca in storage */\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}