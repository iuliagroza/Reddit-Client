{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import{Alert,AlertTitle}from'@material-ui/lab';import Layout from'../../components/Layout';import Card from'../../components/Card';import Skeleton from'../../components/Skeleton';import{getAllPosts}from'../../features/posts/postsSlice';import useFetch from'../../hooks/useFetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useParams=useParams(),filterBy=_useParams.filterBy;var _useFetch=useFetch({action:getAllPosts,params:filterBy}),posts=_useFetch.posts;var postsData=posts.posts,isLoading=posts.isLoading,isError=posts.isError,error=posts.error;if(isError){return/*#__PURE__*/_jsx(Layout,{navigation:true,aside:true,sidebarProps:{type:'filter'},children:/*#__PURE__*/_jsxs(Alert,{severity:\"error\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),\"There was an error with your request \\u2014 \",/*#__PURE__*/_jsx(\"strong\",{children:error})]})});}if(isLoading){return/*#__PURE__*/_jsx(Layout,{navigation:true,aside:true,sidebarProps:{type:'filter'},children:Array.from(new Array(6)).map(function(_,idx){return/*#__PURE__*/_jsx(Skeleton,{type:\"card\"},idx);})});}return/*#__PURE__*/_jsx(Layout,{navigation:true,aside:true,sidebarProps:{type:'filter'},children:postsData===null||postsData===void 0?void 0:postsData.map(function(post){return/*#__PURE__*/_jsx(Card,{postProps:{data:post}},post.id);})});};export default Home;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/pages/home/index.tsx"],"names":["React","useParams","Alert","AlertTitle","Layout","Card","Skeleton","getAllPosts","useFetch","Home","filterBy","action","params","posts","postsData","isLoading","isError","error","type","Array","from","map","_","idx","post","data","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,OAASC,WAAT,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,C,wFAMA,GAAMC,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,EAAM,CAC3B,eAAqBR,SAAS,EAA9B,CAAQS,QAAR,YAAQA,QAAR,CAEA,cAAkBF,QAAQ,CAAC,CAAEG,MAAM,CAAEJ,WAAV,CAAuBK,MAAM,CAAEF,QAA/B,CAAD,CAA1B,CAAQG,KAAR,WAAQA,KAAR,CACA,GAAeC,CAAAA,SAAf,CAAwDD,KAAxD,CAAQA,KAAR,CAA0BE,SAA1B,CAAwDF,KAAxD,CAA0BE,SAA1B,CAAqCC,OAArC,CAAwDH,KAAxD,CAAqCG,OAArC,CAA8CC,KAA9C,CAAwDJ,KAAxD,CAA8CI,KAA9C,CAEA,GAAID,OAAJ,CAAa,CACX,mBACE,KAAC,MAAD,EAAQ,UAAU,KAAlB,CAAmB,KAAK,KAAxB,CAAyB,YAAY,CAAE,CAAEE,IAAI,CAAE,QAAR,CAAvC,uBACE,MAAC,KAAD,EAAO,QAAQ,CAAC,OAAhB,wBACE,KAAC,UAAD,oBADF,6DAEyC,wBAASD,KAAT,EAFzC,GADF,EADF,CAQD,CAED,GAAIF,SAAJ,CAAe,CACb,mBACE,KAAC,MAAD,EAAQ,UAAU,KAAlB,CAAmB,KAAK,KAAxB,CAAyB,YAAY,CAAE,CAAEG,IAAI,CAAE,QAAR,CAAvC,UACGC,KAAK,CAACC,IAAN,CAAW,GAAID,CAAAA,KAAJ,CAAU,CAAV,CAAX,EAAyBE,GAAzB,CAA6B,SAACC,CAAD,CAAIC,GAAJ,qBAC5B,KAAC,QAAD,EAAU,IAAI,CAAC,MAAf,EAA2BA,GAA3B,CAD4B,EAA7B,CADH,EADF,CAOD,CAED,mBACE,KAAC,MAAD,EAAQ,UAAU,KAAlB,CAAmB,KAAK,KAAxB,CAAyB,YAAY,CAAE,CAAEL,IAAI,CAAE,QAAR,CAAvC,UACGJ,SADH,SACGA,SADH,iBACGA,SAAS,CAAEO,GAAX,CAAe,SAACG,IAAD,qBACd,KAAC,IAAD,EAAM,SAAS,CAAE,CAAEC,IAAI,CAAED,IAAR,CAAjB,EAAsCA,IAAI,CAACE,EAA3C,CADc,EAAf,CADH,EADF,CAOD,CAlCD,CAoCA,cAAejB,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { getAllPosts } from '../../features/posts/postsSlice';\nimport useFetch from '../../hooks/useFetch';\n\ntype ParamsProps = {\n  filterBy: string;\n};\n\nconst Home: React.FC = () => {\n  const { filterBy } = useParams<ParamsProps>();\n\n  const { posts } = useFetch({ action: getAllPosts, params: filterBy });\n  const { posts: postsData, isLoading, isError, error } = posts;\n\n  if (isError) {\n    return (\n      <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request â€” <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n        {Array.from(new Array(6)).map((_, idx) => (\n          <Skeleton type=\"card\" key={idx} />\n        ))}\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n      {postsData?.map((post: any) => (\n        <Card postProps={{ data: post }} key={post.id} />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}