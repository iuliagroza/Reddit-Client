{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient2\\\\src\\\\pages\\\\subreddit\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { getSubredditByName, getSubredditPosts } from '../../features/subreddit/subredditSlice';\nimport useFetch from '../../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subreddit = () => {\n  _s();\n\n  const {\n    subredditName\n  } = useParams();\n  const {\n    subreddit: {\n      info\n    }\n  } = useFetch({\n    action: getSubredditByName,\n    params: subredditName\n  });\n  const {\n    subreddit: {\n      posts,\n      isLoading,\n      isError,\n      error\n    }\n  } = useFetch({\n    action: getSubredditPosts,\n    params: subredditName\n  });\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      aside: true,\n      sidebarProps: {\n        type: 'filter'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \"There was an error with your request \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      aside: true,\n      sidebarProps: {\n        type: 'subreddit'\n      },\n      children: Array.from(new Array(6)).map((_, idx) => /*#__PURE__*/_jsxDEV(Skeleton, {\n        type: \"card\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    aside: true,\n    sidebarProps: {\n      type: 'subreddit',\n      data: info\n    },\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      postProps: {\n        data: post\n      }\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Subreddit, \"131yk8W1siNY1ug+raV7yEzRHjY=\", false, function () {\n  return [useParams, useFetch, useFetch];\n});\n\n_c = Subreddit;\nexport default Subreddit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subreddit\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/src/pages/subreddit/index.tsx"],"names":["React","useParams","Alert","AlertTitle","Layout","Card","Skeleton","getSubredditByName","getSubredditPosts","useFetch","Subreddit","subredditName","subreddit","info","action","params","posts","isLoading","isError","error","type","Array","from","map","_","idx","data","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SACEC,kBADF,EAEEC,iBAFF,QAGO,yCAHP;AAIA,OAAOC,QAAP,MAAqB,sBAArB;;;AAMA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAoBV,SAAS,EAAnC;AAEA,QAAM;AACJW,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AADP,MAEFJ,QAAQ,CAAC;AAAEK,IAAAA,MAAM,EAAEP,kBAAV;AAA8BQ,IAAAA,MAAM,EAAEJ;AAAtC,GAAD,CAFZ;AAIA,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEI,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B;AADP,MAEFV,QAAQ,CAAC;AAAEK,IAAAA,MAAM,EAAEN,iBAAV;AAA6BO,IAAAA,MAAM,EAAEJ;AAArC,GAAD,CAFZ;;AAIA,MAAIO,OAAJ,EAAa;AACX,wBACE,QAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,YAAY,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAA5B;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,+DAEyC;AAAA,oBAASD;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,MAAIF,SAAJ,EAAe;AACb,wBACE,QAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,YAAY,EAAE;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAA5B;AAAA,gBACGC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,CAAV,CAAX,EAAyBE,GAAzB,CAA6B,CAACC,CAAD,EAAIC,GAAJ,kBAC5B,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC;AAAf,SAA2BA,GAA3B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,YAAY,EAAE;AAAEL,MAAAA,IAAI,EAAE,WAAR;AAAqBM,MAAAA,IAAI,EAAEb;AAA3B,KAA5B;AAAA,cACGG,KAAK,CAACO,GAAN,CAAWI,IAAD,iBACT,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE;AAAED,QAAAA,IAAI,EAAEC;AAAR;AAAjB,OAAsCA,IAAI,CAACC,EAA3C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvCD;;GAAMlB,S;UACsBT,S,EAItBQ,Q,EAIAA,Q;;;KATAC,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport {\n  getSubredditByName,\n  getSubredditPosts,\n} from '../../features/subreddit/subredditSlice';\nimport useFetch from '../../hooks/useFetch';\n\ntype ParamsProps = {\n  subredditName: string;\n};\n\nconst Subreddit: React.FC = () => {\n  const { subredditName } = useParams<ParamsProps>();\n\n  const {\n    subreddit: { info },\n  } = useFetch({ action: getSubredditByName, params: subredditName });\n\n  const {\n    subreddit: { posts, isLoading, isError, error },\n  } = useFetch({ action: getSubredditPosts, params: subredditName });\n\n  if (isError) {\n    return (\n      <Layout aside sidebarProps={{ type: 'filter' }}>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request â€” <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout aside sidebarProps={{ type: 'subreddit' }}>\n        {Array.from(new Array(6)).map((_, idx) => (\n          <Skeleton type=\"card\" key={idx} />\n        ))}\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout aside sidebarProps={{ type: 'subreddit', data: info }}>\n      {posts.map((post: any) => (\n        <Card postProps={{ data: post }} key={post.id} />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Subreddit;\n"]},"metadata":{},"sourceType":"module"}