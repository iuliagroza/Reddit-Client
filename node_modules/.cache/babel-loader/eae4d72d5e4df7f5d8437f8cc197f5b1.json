{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\components\\\\Sidebar\\\\sidebarBase\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { withStyles, List, ListItem, ListItemText, ListItemIcon, Button, ListItemAvatar, Avatar } from '@material-ui/core';\nimport capitalize from 'lodash/capitalize';\nimport Panel from '../panel';\nimport sidebarStyles from './sidebar.styles';\nimport filterOptions from '../../../constants/filterOptions';\nimport { fd } from '../../../helpers';\nimport { getSubreddits } from '../../../features/subreddits/subredditsSlice';\nimport useFetch from '../../../hooks/useFetch';\nimport Skeleton from '../../Skeleton'; // TODO: Change the data type from any to a more typed one\n// type SubredditProps = {\n//   id: string;\n//   display_name: string;\n//   icon_img: string;\n//   subscribers: number;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SidebarBase = ({\n  filter,\n  content,\n  classes\n}) => {\n  _s();\n\n  const {\n    subreddits: {\n      subreddits,\n      isLoading\n    }\n  } = useFetch({\n    action: getSubreddits\n  });\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: classes.sidebar,\n    \"aria-label\": \"Extra content about categories and ads\",\n    children: [content && content, filter && /*#__PURE__*/_jsxDEV(List, {\n      \"aria-label\": \"Reddit category list\",\n      children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(NavLink, {\n        className: classes.link,\n        activeClassName: classes.activeLink,\n        to: option.path,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: classes.listItem,\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: option.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            classes: {\n              primary: classes.listText\n            },\n            primary: capitalize(option.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, option.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      \"aria-label\": \"Featured Subreddits\",\n      title: \"Featured Subreddits\",\n      content: /*#__PURE__*/_jsxDEV(List, {\n        children: isLoading ? Array.from(new Array(8)).map((_, idx) => /*#__PURE__*/_jsxDEV(Skeleton, {\n          type: \"sidebar\"\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)) : subreddits.slice(1, 9).map(data => /*#__PURE__*/_jsxDEV(ListItem, {\n          component: Link,\n          button: true,\n          to: `/subreddit/${data.display_name}`,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: data.display_name,\n              src: data.icon_img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `r/${data.display_name}`,\n            secondary: `${fd.addNumberSeparator(data.subscribers)} subscribers`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/subreddits\",\n        size: \"small\",\n        children: \"All Subreddits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      \"aria-label\": \"Advertisement\",\n      title: \"Advertisement\",\n      content: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/images/ad.jpg`,\n        alt: \"Reclama CNTV\",\n        className: classes.ad,\n        width: \"200px\",\n        height: \"100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarBase, \"0UHcVLHffH3PFFBRFbSCx/kThm4=\", false, function () {\n  return [useFetch];\n});\n\n_c = SidebarBase;\nexport default withStyles(sidebarStyles)(SidebarBase);\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarBase\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/components/Sidebar/sidebarBase/index.tsx"],"names":["React","NavLink","Link","withStyles","List","ListItem","ListItemText","ListItemIcon","Button","ListItemAvatar","Avatar","capitalize","Panel","sidebarStyles","filterOptions","fd","getSubreddits","useFetch","Skeleton","SidebarBase","filter","content","classes","subreddits","isLoading","action","sidebar","map","option","link","activeLink","path","listItem","icon","primary","listText","name","Array","from","_","idx","slice","data","display_name","icon_img","addNumberSeparator","subscribers","id","process","env","PUBLIC_URL","ad"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport {\n  withStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Button,\n  ListItemAvatar,\n  Avatar,\n} from '@material-ui/core';\nimport capitalize from 'lodash/capitalize';\nimport Panel from '../panel';\nimport sidebarStyles, { StyleProps } from './sidebar.styles';\nimport filterOptions, { TOption } from '../../../constants/filterOptions';\nimport { fd } from '../../../helpers';\nimport { getSubreddits } from '../../../features/subreddits/subredditsSlice';\nimport useFetch from '../../../hooks/useFetch';\nimport Skeleton from '../../Skeleton';\n\n// TODO: Change the data type from any to a more typed one\n\n// type SubredditProps = {\n//   id: string;\n//   display_name: string;\n//   icon_img: string;\n//   subscribers: number;\n// };\n\ntype Props = {\n  filter?: true | false | null;\n  content?: React.ReactNode | React.ReactElement | HTMLElement | string | null;\n};\n\nconst SidebarBase: React.FC<Props & StyleProps> = ({\n  filter,\n  content,\n  classes,\n}) => {\n  const {\n    subreddits: { subreddits, isLoading },\n  } = useFetch({ action: getSubreddits });\n\n  return (\n    <aside\n      className={classes.sidebar}\n      aria-label=\"Extra content about categories and ads\"\n    >\n      {content && content}\n      {filter && (\n        <List aria-label=\"Reddit category list\">\n          {filterOptions.map(\n            (option: TOption): JSX.Element => (\n              <NavLink\n                className={classes.link}\n                activeClassName={classes.activeLink}\n                to={option.path}\n                key={option.name}\n              >\n                <ListItem className={classes.listItem} button>\n                  <ListItemIcon>{option.icon}</ListItemIcon>\n                  <ListItemText\n                    classes={{ primary: classes.listText }}\n                    primary={capitalize(option.name)}\n                  />\n                </ListItem>\n              </NavLink>\n            ),\n          )}\n        </List>\n      )}\n      <Panel\n        aria-label=\"Featured Subreddits\"\n        title=\"Featured Subreddits\"\n        content={\n          <List>\n            {isLoading\n              ? Array.from(new Array(8)).map((_, idx) => (\n                  <Skeleton type=\"sidebar\" key={idx} />\n                ))\n              : subreddits.slice(1, 9).map((data: any) => (\n                  <ListItem\n                    component={Link}\n                    button\n                    key={data.id}\n                    to={`/subreddit/${data.display_name}`}\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt={data.display_name} src={data.icon_img} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={`r/${data.display_name}`}\n                      secondary={`${fd.addNumberSeparator(\n                        data.subscribers,\n                      )} subscribers`}\n                    />\n                  </ListItem>\n                ))}\n          </List>\n        }\n        action={\n          <Button component={Link} to=\"/subreddits\" size=\"small\">\n            All Subreddits\n          </Button>\n        }\n      />\n\n      <Panel\n        aria-label=\"Advertisement\"\n        title=\"Advertisement\"\n        content={\n          <img\n            src={`${process.env.PUBLIC_URL}/images/ad.jpg`}\n            alt=\"Reclama CNTV\"\n            className={classes.ad}\n            width=\"200px\"\n            height=\"100px\"\n          />\n        }\n      />\n    </aside>\n  );\n};\n\nexport default withStyles(sidebarStyles)(SidebarBase);\n"]},"metadata":{},"sourceType":"module"}