{"ast":null,"code":"import React from'react';import{NavLink,Link}from'react-router-dom';import{withStyles,List,ListItem,ListItemText,ListItemIcon,Button,ListItemAvatar,Avatar}from'@material-ui/core';import capitalize from'lodash/capitalize';import Panel from'../panel';import sidebarStyles from'./sidebar.styles';import filterOptions from'../../../constants/filterOptions';import{fd}from'../../../helpers';import{getSubreddits}from'../../../features/subreddits/subredditsSlice';import useFetch from'../../../hooks/useFetch';import Skeleton from'../../Skeleton';// TODO: Schimba tipul de date pentru alegere multipla\n// type SubredditProps = {\n//   id: string;\n//   display_name: string;\n//   icon_img: string;\n//   subscribers: number;\n// };\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SidebarBase=function SidebarBase(_ref){var filter=_ref.filter,content=_ref.content,classes=_ref.classes;var _useFetch=useFetch({action:getSubreddits}),_useFetch$subreddits=_useFetch.subreddits,subreddits=_useFetch$subreddits.subreddits,isLoading=_useFetch$subreddits.isLoading;return/*#__PURE__*/_jsxs(\"aside\",{className:classes.sidebar,\"aria-label\":\"Extra content about categories and ads\",children:[content&&content,filter&&/*#__PURE__*/_jsx(List,{\"aria-label\":\"Reddit category list\",children:filterOptions.map(function(option){return/*#__PURE__*/_jsx(NavLink,{className:classes.link,activeClassName:classes.activeLink,to:option.path,children:/*#__PURE__*/_jsxs(ListItem,{className:classes.listItem,button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:option.icon}),/*#__PURE__*/_jsx(ListItemText,{classes:{primary:classes.listText},primary:capitalize(option.name)})]})},option.name);})}),/*#__PURE__*/_jsx(Panel,{\"aria-label\":\"Featured Subreddits\",title:\"Subreddit-uri preferate\",content:/*#__PURE__*/_jsx(List,{children:isLoading?Array.from(new Array(8)).map(function(_,idx){return/*#__PURE__*/_jsx(Skeleton,{type:\"sidebar\"},idx);}):subreddits.slice(1,9).map(function(data){return/*#__PURE__*/_jsxs(ListItem,{component:Link,button:true,to:\"/subreddit/\".concat(data.display_name),children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{alt:data.display_name,src:data.icon_img})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"r/\".concat(data.display_name),secondary:\"\".concat(fd.addNumberSeparator(data.subscribers),\" de abona\\u021Bi\")})]},data.id);})}),action:/*#__PURE__*/_jsx(Button,{component:Link,to:\"/subreddits\",size:\"small\",children:\"Toate Subreddit-urile\"})}),/*#__PURE__*/_jsx(Panel,{\"aria-label\":\"Advertisement\",title:\"Reclam\\u0103\",content:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/images/ad.jpg\"),alt:\"Reclam\\u0103 CNTV\",className:classes.ad,width:\"50rem\",height:\"auto\"})})]});};export default withStyles(sidebarStyles)(SidebarBase);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/components/Sidebar/sidebarBase/index.tsx"],"names":["React","NavLink","Link","withStyles","List","ListItem","ListItemText","ListItemIcon","Button","ListItemAvatar","Avatar","capitalize","Panel","sidebarStyles","filterOptions","fd","getSubreddits","useFetch","Skeleton","SidebarBase","filter","content","classes","action","subreddits","isLoading","sidebar","map","option","link","activeLink","path","listItem","icon","primary","listText","name","Array","from","_","idx","slice","data","display_name","icon_img","addNumberSeparator","subscribers","id","process","env","PUBLIC_URL","ad"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport {\n  withStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Button,\n  ListItemAvatar,\n  Avatar,\n} from '@material-ui/core';\nimport capitalize from 'lodash/capitalize';\nimport Panel from '../panel';\nimport sidebarStyles, { StyleProps } from './sidebar.styles';\nimport filterOptions, { TOption } from '../../../constants/filterOptions';\nimport { fd } from '../../../helpers';\nimport { getSubreddits } from '../../../features/subreddits/subredditsSlice';\nimport useFetch from '../../../hooks/useFetch';\nimport Skeleton from '../../Skeleton';\n\n// TODO: Schimba tipul de date pentru alegere multipla\n\n// type SubredditProps = {\n//   id: string;\n//   display_name: string;\n//   icon_img: string;\n//   subscribers: number;\n// };\n\ntype Props = {\n  filter?: true | false | null;\n  content?: React.ReactNode | React.ReactElement | HTMLElement | string | null;\n};\n\nconst SidebarBase: React.FC<Props & StyleProps> = ({\n  filter,\n  content,\n  classes,\n}) => {\n  const {\n    subreddits: { subreddits, isLoading },\n  } = useFetch({ action: getSubreddits });\n\n  return (\n    <aside\n      className={classes.sidebar}\n      aria-label=\"Extra content about categories and ads\"\n    >\n      {content && content}\n      {filter && (\n        <List aria-label=\"Reddit category list\">\n          {filterOptions.map(\n            (option: TOption): JSX.Element => (\n              <NavLink\n                className={classes.link}\n                activeClassName={classes.activeLink}\n                to={option.path}\n                key={option.name}\n              >\n                <ListItem className={classes.listItem} button>\n                  <ListItemIcon>{option.icon}</ListItemIcon>\n                  <ListItemText\n                    classes={{ primary: classes.listText }}\n                    primary={capitalize(option.name)}\n                  />\n                </ListItem>\n              </NavLink>\n            ),\n          )}\n        </List>\n      )}\n      <Panel\n        aria-label=\"Featured Subreddits\"\n        title=\"Subreddit-uri preferate\"\n        content={\n          <List>\n            {isLoading\n              ? Array.from(new Array(8)).map((_, idx) => (\n                  <Skeleton type=\"sidebar\" key={idx} />\n                ))\n              : subreddits.slice(1, 9).map((data: any) => (\n                  <ListItem\n                    component={Link}\n                    button\n                    key={data.id}\n                    to={`/subreddit/${data.display_name}`}\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt={data.display_name} src={data.icon_img} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={`r/${data.display_name}`}\n                      secondary={`${fd.addNumberSeparator(\n                        data.subscribers,\n                      )} de abonați`}\n                    />\n                  </ListItem>\n                ))}\n          </List>\n        }\n        action={\n          <Button component={Link} to=\"/subreddits\" size=\"small\">\n            Toate Subreddit-urile\n          </Button>\n        }\n      />\n\n      <Panel\n        aria-label=\"Advertisement\"\n        title=\"Reclamă\"\n        content={\n          <img\n            src={`${process.env.PUBLIC_URL}/images/ad.jpg`}\n            alt=\"Reclamă CNTV\"\n            className={classes.ad}\n            width=\"50rem\"\n            height=\"auto\"\n          />\n        }\n      />\n    </aside>\n  );\n};\n\nexport default withStyles(sidebarStyles)(SidebarBase);\n"]},"metadata":{},"sourceType":"module"}