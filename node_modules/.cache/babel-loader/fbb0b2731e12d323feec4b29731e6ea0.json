{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst getDependency = value => {\n  let newValue;\n\n  if (Array.isArray(value)) {\n    [newValue] = value;\n  } else {\n    newValue = value;\n  }\n\n  return newValue;\n};\n\nconst useFetch = args => {\n  _s();\n\n  const {\n    action,\n    params = ''\n  } = args;\n  const dispatch = useDispatch();\n  const getState = useSelector(state => state);\n  const update = getDependency(params);\n  React.useEffect(() => {\n    dispatch(action(params));\n  }, [dispatch, update]);\n  return getState;\n};\n\n_s(useFetch, \"MTkKB6trMC4wMich1ZazASNTzEE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/hooks/useFetch.ts"],"names":["React","useDispatch","useSelector","getDependency","value","newValue","Array","isArray","useFetch","args","action","params","dispatch","getState","state","update","useEffect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAYA,MAAMC,aAAa,GAAIC,KAAD,IAA4B;AAChD,MAAIC,QAAJ;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxB,KAACC,QAAD,IAAaD,KAAb;AACD,GAFD,MAEO;AACLC,IAAAA,QAAQ,GAAGD,KAAX;AACD;;AAED,SAAOC,QAAP;AACD,CATD;;AAWA,MAAMG,QAAQ,GAAIC,IAAD,IAAkB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAM,GAAG;AAAnB,MAA0BF,IAAhC;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGX,WAAW,CAAEY,KAAD,IAAsBA,KAAvB,CAA5B;AACA,QAAMC,MAAM,GAAGZ,aAAa,CAACQ,MAAD,CAA5B;AAEAX,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,QAAQ,CAACF,MAAM,CAACC,MAAD,CAAP,CAAR;AACD,GAFD,EAEG,CAACC,QAAD,EAAWG,MAAX,CAFH;AAIA,SAAOF,QAAP;AACD,CAXD;;GAAML,Q;UAEaP,W,EACAC,W;;;AAUnB,eAAeM,QAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store/rootReducer';\n\ntype TParams = string | string[];\n\n/* Rezolva problemele de dependencies cand faci fetch pe API in promise pe ts */\n\ntype TFetch = {\n  action: (...args: string[] | any) => void;\n  params?: TParams;\n};\n\nconst getDependency = (value: TParams): string => {\n  let newValue;\n  if (Array.isArray(value)) {\n    [newValue] = value;\n  } else {\n    newValue = value;\n  }\n\n  return newValue;\n};\n\nconst useFetch = (args: TFetch) => {\n  const { action, params = '' } = args;\n  const dispatch = useDispatch();\n  const getState = useSelector((state: RootState) => state);\n  const update = getDependency(params);\n\n  React.useEffect(() => {\n    dispatch(action(params));\n  }, [dispatch, update]);\n\n  return getState;\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}