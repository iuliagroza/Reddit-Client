{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\pages\\\\post\\\\index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Link, useParams } from 'react-router-dom';\nimport { withStyles, Tooltip, Divider, Avatar, Breadcrumbs, Button } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { fd } from '../../helpers';\nimport postStyles, { StyledBreadcrumb } from './post.styles';\nimport useFetch from '../../hooks/useFetch';\nimport { getPost } from '../../features/post/postSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  classes\n}) => {\n  _s();\n\n  const {\n    subredditName,\n    id\n  } = useParams();\n  const {\n    post: postState\n  } = useFetch({\n    action: getPost,\n    params: [subredditName, id]\n  });\n  const {\n    data: {\n      post,\n      comments\n    },\n    isLoading,\n    isError,\n    error\n  } = postState;\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      navigation: true,\n      aside: true,\n      sidebarProps: {\n        type: 'filter'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \"There was an error with your request \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      aside: true,\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: classes.post,\n        \"aria-label\": \"post content\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          type: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    aside: true,\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: classes.post,\n      \"aria-label\": \"post content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        maxItems: 2,\n        \"aria-label\": \"breadcrumbs\",\n        component: \"nav\",\n        children: [/*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n          component: Link,\n          to: \"/\",\n          label: \"Home\",\n          clickable: true,\n          icon: /*#__PURE__*/_jsxDEV(HomeIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n          component: Link,\n          to: \"/subreddits/\",\n          label: \"Subreddits\",\n          clickable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n          component: Link,\n          to: `/subreddit/${post.subreddit}`,\n          label: post.subreddit,\n          clickable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n          label: post.name,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: classes.header,\n        \"aria-label\": \"post head\",\n        children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n          className: classes.info,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: \"top\",\n            title: \"Upvotes\",\n            \"aria-label\": \"upvotes count\",\n            arrow: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(PublishIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 28\n              }, this),\n              size: \"small\",\n              classes: {\n                root: classes.actionVote\n              },\n              disableRipple: true,\n              disableFocusRipple: true,\n              children: fd.shortenLargeNumber(post.ups)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [post.upvote_ratio * 100, \"% ratio\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"horizontal\",\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.top,\n          \"aria-label\": \"article head\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.panel,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: post.author,\n              src: post.thumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                \"aria-label\": \"author name\",\n                style: {\n                  color: post.author_flair_background_color && post.author_flair_background_color\n                },\n                to: `/profile/${post.author}`,\n                children: post.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                \"aria-label\": \"time posted\",\n                children: (post === null || post === void 0 ? void 0 : post.created_utc) && fd.getTimeFromNow(post.created_utc)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: classes.title,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.underLine,\n            style: {\n              backgroundColor: post.author_flair_background_color && post.author_flair_background_color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        \"aria-label\": \"post body\",\n        className: classes.body,\n        children: [post.selftext && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.description,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            plugins: [gfm],\n            children: post.selftext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), post.post_hint === 'image' && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: post.url_overridden_by_dest,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: post.title,\n            src: post.url_overridden_by_dest,\n            className: classes.preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), comments && comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"section\", {\n        \"aria-label\": \"discussion list\",\n        className: classes.comments,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Discussions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n            component: \"li\",\n            type: \"comment\",\n            commentProps: {\n              data: comment,\n              postId: post.id\n            }\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"KD0kI6cxd95LanPNm46k7qA4vCo=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Post;\nexport default withStyles(postStyles)(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/pages/post/index.tsx"],"names":["React","ReactMarkdown","gfm","Link","useParams","withStyles","Tooltip","Divider","Avatar","Breadcrumbs","Button","Alert","AlertTitle","HomeIcon","PublishIcon","Layout","Card","Skeleton","fd","postStyles","StyledBreadcrumb","useFetch","getPost","Post","classes","subredditName","id","post","postState","action","params","data","comments","isLoading","isError","error","type","subreddit","name","header","info","root","actionVote","shortenLargeNumber","ups","upvote_ratio","divider","top","panel","author","thumbnail","wrapper","color","author_flair_background_color","created_utc","getTimeFromNow","title","underLine","backgroundColor","body","selftext","description","post_hint","url_overridden_by_dest","preview","length","map","comment","postId"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,WALF,EAMEC,MANF,QAOO,mBAPP;AAQA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,EAAT,QAAmB,eAAnB;AACA,OAAOC,UAAP,IAAqBC,gBAArB,QAAyD,eAAzD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,+BAAxB;;;AAiBA,MAAMC,IAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAClD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAwBtB,SAAS,EAAvC;AAEA,QAAM;AAAEuB,IAAAA,IAAI,EAAEC;AAAR,MAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,MAAM,EAAEP,OAD2B;AAEnCQ,IAAAA,MAAM,EAAE,CAACL,aAAD,EAAgBC,EAAhB;AAF2B,GAAD,CAApC;AAIA,QAAM;AACJK,IAAAA,IAAI,EAAE;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA;AAAR,KADF;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKMP,SALZ;;AAOA,MAAIM,OAAJ,EAAa;AACX,wBACE,QAAC,MAAD;AAAQ,MAAA,UAAU,MAAlB;AAAmB,MAAA,KAAK,MAAxB;AAAyB,MAAA,YAAY,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAvC;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,+DAEyC;AAAA,oBAASD;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,MAAIF,SAAJ,EAAe;AACb,wBACE,QAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAA,6BACE;AAAS,QAAA,SAAS,EAAET,OAAO,CAACG,IAA5B;AAAkC,sBAAW,cAA7C;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEH,OAAO,CAACG,IAA5B;AAAkC,oBAAW,cAA7C;AAAA,8BAEE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,CAAvB;AAA0B,sBAAW,aAArC;AAAmD,QAAA,SAAS,EAAC,KAA7D;AAAA,gCACE,QAAC,gBAAD;AACE,UAAA,SAAS,EAAExB,IADb;AAEE,UAAA,EAAE,EAAC,GAFL;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,IAAI,eAAE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,gBAAD;AACE,UAAA,SAAS,EAAEA,IADb;AAEE,UAAA,EAAE,EAAC,cAFL;AAGE,UAAA,KAAK,EAAC,YAHR;AAIE,UAAA,SAAS;AAJX;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE,QAAC,gBAAD;AACE,UAAA,SAAS,EAAEA,IADb;AAEE,UAAA,EAAE,EAAG,cAAawB,IAAI,CAACU,SAAU,EAFnC;AAGE,UAAA,KAAK,EAAEV,IAAI,CAACU,SAHd;AAIE,UAAA,SAAS;AAJX;AAAA;AAAA;AAAA;AAAA,gBAdF,eAoBE,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEV,IAAI,CAACW,IAA9B;AAAoC,UAAA,QAAQ;AAA5C;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAyBE;AAAQ,QAAA,SAAS,EAAEd,OAAO,CAACe,MAA3B;AAAmC,sBAAW,WAA9C;AAAA,gCACE;AAAO,UAAA,SAAS,EAAEf,OAAO,CAACgB,IAA1B;AAAA,kCACE,QAAC,OAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,0BAAW,eAHb;AAIE,YAAA,KAAK,MAJP;AAAA,mCAME,QAAC,MAAD;AACE,cAAA,SAAS,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,sBADb;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,OAAO,EAAE;AAAEC,gBAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,eAHX;AAIE,cAAA,aAAa,MAJf;AAKE,cAAA,kBAAkB,MALpB;AAAA,wBAOGxB,EAAE,CAACyB,kBAAH,CAAsBhB,IAAI,CAACiB,GAA3B;AAPH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE;AAAA,uBAAOjB,IAAI,CAACkB,YAAL,GAAoB,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAuBE,QAAC,OAAD;AAAS,UAAA,WAAW,EAAC,UAArB;AAAgC,UAAA,QAAQ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAwBE,QAAC,OAAD;AAAS,UAAA,WAAW,EAAC,YAArB;AAAkC,UAAA,SAAS,EAAErB,OAAO,CAACsB;AAArD;AAAA;AAAA;AAAA;AAAA,gBAxBF,eAyBE;AAAK,UAAA,SAAS,EAAEtB,OAAO,CAACuB,GAAxB;AAA6B,wBAAW,cAAxC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAEvB,OAAO,CAACwB,KAAxB;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAErB,IAAI,CAACsB,MAAlB;AAA0B,cAAA,GAAG,EAAEtB,IAAI,CAACuB;AAApC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAE1B,OAAO,CAAC2B,OAAxB;AAAA,sCACE,QAAC,IAAD;AACE,8BAAW,aADb;AAEE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,KAAK,EACHzB,IAAI,CAAC0B,6BAAL,IACA1B,IAAI,CAAC0B;AAHF,iBAFT;AAOE,gBAAA,EAAE,EAAG,YAAW1B,IAAI,CAACsB,MAAO,EAP9B;AAAA,0BASGtB,IAAI,CAACsB;AATR;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AAAM,8BAAW,aAAjB;AAAA,0BACG,CAAAtB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE2B,WAAN,KAAqBpC,EAAE,CAACqC,cAAH,CAAkB5B,IAAI,CAAC2B,WAAvB;AADxB;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAoBE;AAAI,YAAA,SAAS,EAAE9B,OAAO,CAACgC,KAAvB;AAAA,sBAA+B7B,IAAI,CAAC6B;AAApC;AAAA;AAAA;AAAA;AAAA,kBApBF,eAqBE;AACE,YAAA,SAAS,EAAEhC,OAAO,CAACiC,SADrB;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,eAAe,EACb/B,IAAI,CAAC0B,6BAAL,IACA1B,IAAI,CAAC0B;AAHF;AAFT;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eAkFE;AAAS,sBAAW,WAApB;AAAgC,QAAA,SAAS,EAAE7B,OAAO,CAACmC,IAAnD;AAAA,mBACGhC,IAAI,CAACiC,QAAL,iBACC;AAAG,UAAA,SAAS,EAAEpC,OAAO,CAACqC,WAAtB;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,OAAO,EAAE,CAAC3D,GAAD,CAAxB;AAA+B,YAAA,QAAQ,EAAEyB,IAAI,CAACiC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOGjC,IAAI,CAACmC,SAAL,KAAmB,OAAnB,iBACC;AACE,UAAA,IAAI,EAAEnC,IAAI,CAACoC,sBADb;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,GAAG,EAAC,qBAHN;AAAA,iCAKE;AACE,YAAA,GAAG,EAAEpC,IAAI,CAAC6B,KADZ;AAEE,YAAA,GAAG,EAAE7B,IAAI,CAACoC,sBAFZ;AAGE,YAAA,SAAS,EAAEvC,OAAO,CAACwC;AAHrB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlFF,EAwGGhC,QAAQ,IAAIA,QAAQ,CAACiC,MAAT,GAAkB,CAA9B,gBACC;AAAS,sBAAW,iBAApB;AAAsC,QAAA,SAAS,EAAEzC,OAAO,CAACQ,QAAzD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGA,QAAQ,CAACkC,GAAT,CAAcC,OAAD,iBACZ,QAAC,IAAD;AACE,YAAA,SAAS,EAAC,IADZ;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,YAAY,EAAE;AAAEpC,cAAAA,IAAI,EAAEoC,OAAR;AAAiBC,cAAAA,MAAM,EAAEzC,IAAI,CAACD;AAA9B;AAHhB,aAIOyC,OAAO,CAACzC,EAJf;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAcG,IAtHN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4HD,CA/JD;;GAAMH,I;UAC0BnB,S,EAEFiB,Q;;;KAHxBE,I;AAiKN,eAAelB,UAAU,CAACc,UAAD,CAAV,CAAuBI,IAAvB,CAAf","sourcesContent":["/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  withStyles,\n  Tooltip,\n  Divider,\n  Avatar,\n  Breadcrumbs,\n  Button,\n} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport { fd } from '../../helpers';\nimport postStyles, { StyledBreadcrumb, StyleProps } from './post.styles';\nimport useFetch from '../../hooks/useFetch';\nimport { getPost } from '../../features/post/postSlice';\n\ntype ParamsProps = {\n  id: string;\n  subredditName: string;\n};\n\ntype TState = {\n  data: {\n    post: any;\n    comments: any;\n  };\n  isLoading: boolean;\n  isError: boolean;\n  error: string | null;\n};\n\nconst Post: React.FC<StyleProps> = ({ classes }) => {\n  const { subredditName, id } = useParams<ParamsProps>();\n\n  const { post: postState } = useFetch({\n    action: getPost,\n    params: [subredditName, id],\n  });\n  const {\n    data: { post, comments },\n    isLoading,\n    isError,\n    error,\n  }: TState = postState;\n\n  if (isError) {\n    return (\n      <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request — <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout aside>\n        <article className={classes.post} aria-label=\"post content\">\n          <Skeleton type=\"post\" />\n        </article>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout aside>\n      <article className={classes.post} aria-label=\"post content\">\n        {/* Scheletul cardului de postari exportat in pagina */}\n        <Breadcrumbs maxItems={2} aria-label=\"breadcrumbs\" component=\"nav\">\n          <StyledBreadcrumb\n            component={Link}\n            to=\"/\"\n            label=\"Home\"\n            clickable\n            icon={<HomeIcon fontSize=\"small\" />}\n          />\n          <StyledBreadcrumb\n            component={Link}\n            to=\"/subreddits/\"\n            label=\"Subreddits\"\n            clickable\n          />\n          <StyledBreadcrumb\n            component={Link}\n            to={`/subreddit/${post.subreddit}`}\n            label={post.subreddit}\n            clickable\n          />\n          <StyledBreadcrumb label={post.name} disabled />\n        </Breadcrumbs>\n\n        <header className={classes.header} aria-label=\"post head\">\n          <aside className={classes.info}>\n            <Tooltip\n              placement=\"top\"\n              title=\"Upvotes\"\n              aria-label=\"upvotes count\"\n              arrow\n            >\n              <Button\n                startIcon={<PublishIcon />}\n                size=\"small\"\n                classes={{ root: classes.actionVote }}\n                disableRipple\n                disableFocusRipple\n              >\n                {fd.shortenLargeNumber(post.ups)}\n              </Button>\n            </Tooltip>\n\n            <span>{post.upvote_ratio * 100}% ratio</span>\n          </aside>\n\n          {/* Orientare dinamica pentru Responsive design, in functie de orientarea ecranului pe mobil */}\n          <Divider orientation=\"vertical\" flexItem />\n          <Divider orientation=\"horizontal\" className={classes.divider} />\n          <div className={classes.top} aria-label=\"article head\">\n            <div className={classes.panel}>\n              <Avatar alt={post.author} src={post.thumbnail} />\n              <div className={classes.wrapper}>\n                <Link\n                  aria-label=\"author name\"\n                  style={{\n                    color:\n                      post.author_flair_background_color &&\n                      post.author_flair_background_color,\n                  }}\n                  to={`/profile/${post.author}`}\n                >\n                  {post.author}\n                </Link>\n                <time aria-label=\"time posted\">\n                  {post?.created_utc && fd.getTimeFromNow(post.created_utc)}\n                </time>\n              </div>\n            </div>\n            <h1 className={classes.title}>{post.title}</h1>\n            <div\n              className={classes.underLine}\n              style={{\n                backgroundColor:\n                  post.author_flair_background_color &&\n                  post.author_flair_background_color,\n              }}\n            />\n          </div>\n        </header>\n\n        <section aria-label=\"post body\" className={classes.body}>\n          {post.selftext && (\n            <p className={classes.description}>\n              <ReactMarkdown plugins={[gfm]} children={post.selftext} />\n            </p>\n          )}\n\n          {post.post_hint === 'image' && (\n            <a\n              href={post.url_overridden_by_dest}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                alt={post.title}\n                src={post.url_overridden_by_dest}\n                className={classes.preview}\n              />\n            </a>\n          )}\n        </section>\n\n        {comments && comments.length > 0 ? (\n          <section aria-label=\"discussion list\" className={classes.comments}>\n            <h2>Discussions</h2>\n            <ul>\n              {comments.map((comment: any) => (\n                <Card\n                  component=\"li\"\n                  type=\"comment\"\n                  commentProps={{ data: comment, postId: post.id }}\n                  key={comment.id}\n                />\n              ))}\n            </ul>\n          </section>\n        ) : null}\n      </article>\n    </Layout>\n  );\n};\n\nexport default withStyles(postStyles)(Post);\n"]},"metadata":{},"sourceType":"module"}