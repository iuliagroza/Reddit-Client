{"ast":null,"code":"import _toConsumableArray from \"C:/Users/dell/Desktop/Info/Projects/RedditClient2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds plugins to the precaching strategy.\n *\n * @param {Array<Object>} plugins\n *\n * @memberof module:workbox-precaching\n */\n\nfunction addPlugins(plugins) {\n  var _precacheController$s;\n\n  var precacheController = getOrCreatePrecacheController();\n\n  (_precacheController$s = precacheController.strategy.plugins).push.apply(_precacheController$s, _toConsumableArray(plugins));\n}\n\nexport { addPlugins };","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/node_modules/workbox-precaching/addPlugins.js"],"names":["getOrCreatePrecacheController","addPlugins","plugins","precacheController","strategy","push"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,6BAAT,QAA8C,0CAA9C;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAAA;;AACzB,MAAMC,kBAAkB,GAAGH,6BAA6B,EAAxD;;AACA,2BAAAG,kBAAkB,CAACC,QAAnB,CAA4BF,OAA5B,EAAoCG,IAApC,iDAA4CH,OAA5C;AACH;;AACD,SAASD,UAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds plugins to the precaching strategy.\n *\n * @param {Array<Object>} plugins\n *\n * @memberof module:workbox-precaching\n */\nfunction addPlugins(plugins) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.strategy.plugins.push(...plugins);\n}\nexport { addPlugins };\n"]},"metadata":{},"sourceType":"module"}