{"ast":null,"code":"import _objectSpread from\"C:/Users/dell/Desktop/Info/Projects/RedditClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable no-unused-vars */import React from'react';import{createMuiTheme,ThemeProvider,CssBaseline}from'@material-ui/core';import{useSelector}from'react-redux';import darkTheme from'./dark';import lightTheme from'./light';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// TODO: Invata cum sa faci sa mearga Dark Mode fara sa transmiti tipul obiectului ca referinta\nvar themeConstructor=function themeConstructor(){var _useSelector=useSelector(function(state){return state.theme;}),lightMode=_useSelector.lightMode;var themeBasedOnMode=lightMode?lightTheme:darkTheme;return createMuiTheme(_objectSpread(_objectSpread({},themeBasedOnMode),{},{/* breakpoints ale ecranului responsive, in functie de dimensiunea ferestrei */breakpoints:{values:{xs:0,xxs:450,sm:600,md:960,lg:1280,xl:1920}},overrides:{MuiCssBaseline:{'@global':{html:{WebkitFontSmoothing:'auto',margin:0,padding:0}}}}}));};var ThemeProviderWithMode=function ThemeProviderWithMode(_ref){var children=_ref.children;var theme=themeConstructor();/* exporta theme provider-ul pe toate paginile */return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),children]});};export default ThemeProviderWithMode;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/theme/index.tsx"],"names":["React","createMuiTheme","ThemeProvider","CssBaseline","useSelector","darkTheme","lightTheme","themeConstructor","state","theme","lightMode","themeBasedOnMode","breakpoints","values","xs","xxs","sm","md","lg","xl","overrides","MuiCssBaseline","html","WebkitFontSmoothing","margin","padding","ThemeProviderWithMode","children"],"mappings":"sKAAA,mCACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,cADF,CAEEC,aAFF,CAGEC,WAHF,KAKO,mBALP,CAMA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,QAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,SAAvB,C,wFA6BA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAa,CACpC,iBAAsBH,WAAW,CAAC,SAACI,KAAD,QAAsBA,CAAAA,KAAK,CAACC,KAA5B,EAAD,CAAjC,CAAQC,SAAR,cAAQA,SAAR,CACA,GAAMC,CAAAA,gBAAwB,CAAGD,SAAS,CAAGJ,UAAH,CAAgBD,SAA1D,CAEA,MAAOJ,CAAAA,cAAc,gCAChBU,gBADgB,MAEnB,+EACAC,WAAW,CAAE,CACXC,MAAM,CAAE,CACNC,EAAE,CAAE,CADE,CAENC,GAAG,CAAE,GAFC,CAGNC,EAAE,CAAE,GAHE,CAINC,EAAE,CAAE,GAJE,CAKNC,EAAE,CAAE,IALE,CAMNC,EAAE,CAAE,IANE,CADG,CAHM,CAanBC,SAAS,CAAE,CACTC,cAAc,CAAE,CACd,UAAW,CACTC,IAAI,CAAE,CACJC,mBAAmB,CAAE,MADjB,CAEJC,MAAM,CAAE,CAFJ,CAGJC,OAAO,CAAE,CAHL,CADG,CADG,CADP,CAbQ,GAArB,CAyBD,CA7BD,CA+BA,GAAMC,CAAAA,qBAAsC,CAAG,QAAzCA,CAAAA,qBAAyC,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC/D,GAAMlB,CAAAA,KAAK,CAAGF,gBAAgB,EAA9B,CACA,iDACA,mBACE,MAAC,aAAD,EAAe,KAAK,CAAEE,KAAtB,wBACE,KAAC,WAAD,IADF,CAEGkB,QAFH,GADF,CAMD,CATD,CAWA,cAAeD,CAAAA,qBAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  CssBaseline,\n  Theme,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/rootReducer';\nimport darkTheme from './dark';\nimport lightTheme from './light';\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface Palette {\n    clrAccent: React.CSSProperties['color'];\n    clrHover: {\n      main: React.CSSProperties['color'];\n    };\n    clrReddit: React.CSSProperties['color'];\n  }\n  interface PaletteOptions {\n    clrAccent: React.CSSProperties['color'];\n    clrHover: {\n      main: React.CSSProperties['color'];\n    };\n    clrReddit: React.CSSProperties['color'];\n  }\n}\n\ndeclare module '@material-ui/core/styles/createBreakpoints' {\n  interface BreakpointOverrides {\n    xxs: true;\n  }\n}\n\ntype Props = {\n  children: React.ReactNode;\n};\n\n// TODO: Invata cum sa faci sa mearga Dark Mode fara sa transmiti tipul obiectului ca referinta\nconst themeConstructor = (): Theme => {\n  const { lightMode } = useSelector((state: RootState) => state.theme);\n  const themeBasedOnMode: object = lightMode ? lightTheme : darkTheme;\n\n  return createMuiTheme({\n    ...themeBasedOnMode,\n    /* breakpoints ale ecranului responsive, in functie de dimensiunea ferestrei */\n    breakpoints: {\n      values: {\n        xs: 0,\n        xxs: 450,\n        sm: 600,\n        md: 960,\n        lg: 1280,\n        xl: 1920,\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          html: {\n            WebkitFontSmoothing: 'auto',\n            margin: 0,\n            padding: 0,\n          },\n        },\n      },\n    },\n  });\n};\n\nconst ThemeProviderWithMode: React.FC<Props> = ({ children }) => {\n  const theme = themeConstructor();\n  /* exporta theme provider-ul pe toate paginile */\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default ThemeProviderWithMode;\n"]},"metadata":{},"sourceType":"module"}