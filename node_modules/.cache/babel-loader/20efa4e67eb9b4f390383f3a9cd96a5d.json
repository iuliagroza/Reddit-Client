{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import{Alert,AlertTitle}from'@material-ui/lab';import Layout from'../../components/Layout';import Card from'../../components/Card';import Skeleton from'../../components/Skeleton';import useFetch from'../../hooks/useFetch';import{getUserByName,getUserPosts}from'../../features/user/userSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";/* Promises pe incarcarea datelor utilizatorului cu tot cu Redux pe 404 */var User=function User(){var _useParams=useParams(),userName=_useParams.userName;var _useFetch=useFetch({action:getUserByName,params:userName}),profile=_useFetch.user.profile;var _useFetch2=useFetch({action:getUserPosts,params:userName}),_useFetch2$user=_useFetch2.user,data=_useFetch2$user.data,isLoading=_useFetch2$user.isLoading,isError=_useFetch2$user.isError,error=_useFetch2$user.error;if(isError){return/*#__PURE__*/_jsx(Layout,{navigation:true,aside:true,sidebarProps:{type:'filter'},children:/*#__PURE__*/_jsxs(Alert,{severity:\"error\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),\"There was an error with your request \\u2014 \",/*#__PURE__*/_jsx(\"strong\",{children:error})]})});}if(isLoading){return/*#__PURE__*/_jsx(Layout,{aside:true,sidebarProps:{type:'user'},children:Array.from(new Array(3)).map(function(_,idx){return/*#__PURE__*/_jsx(Skeleton,{type:\"card\"},idx);})});}return/*#__PURE__*/_jsx(Layout,{aside:true,sidebarProps:{type:'user',data:profile},children:data.posts.map(function(userPost){return/*#__PURE__*/_jsx(Card,{postProps:{data:userPost}},userPost.id);})});};export default User;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/pages/profile/index.tsx"],"names":["React","useParams","Alert","AlertTitle","Layout","Card","Skeleton","useFetch","getUserByName","getUserPosts","User","userName","action","params","profile","user","data","isLoading","isError","error","type","Array","from","map","_","idx","posts","userPost","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA4C,+BAA5C,C,wFAMA,0EACA,GAAMC,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,EAAM,CAC3B,eAAqBT,SAAS,EAA9B,CAAQU,QAAR,YAAQA,QAAR,CAEA,cAEIJ,QAAQ,CAAC,CAAEK,MAAM,CAAEJ,aAAV,CAAyBK,MAAM,CAAEF,QAAjC,CAAD,CAFZ,CACUG,OADV,WACEC,IADF,CACUD,OADV,CAIA,eAEIP,QAAQ,CAAC,CAAEK,MAAM,CAAEH,YAAV,CAAwBI,MAAM,CAAEF,QAAhC,CAAD,CAFZ,4BACEI,IADF,CACUC,IADV,iBACUA,IADV,CACgBC,SADhB,iBACgBA,SADhB,CAC2BC,OAD3B,iBAC2BA,OAD3B,CACoCC,KADpC,iBACoCA,KADpC,CAIA,GAAID,OAAJ,CAAa,CACX,mBACE,KAAC,MAAD,EAAQ,UAAU,KAAlB,CAAmB,KAAK,KAAxB,CAAyB,YAAY,CAAE,CAAEE,IAAI,CAAE,QAAR,CAAvC,uBACE,MAAC,KAAD,EAAO,QAAQ,CAAC,OAAhB,wBACE,KAAC,UAAD,oBADF,6DAEyC,wBAASD,KAAT,EAFzC,GADF,EADF,CAQD,CAED,GAAIF,SAAJ,CAAe,CACb,mBACE,KAAC,MAAD,EAAQ,KAAK,KAAb,CAAc,YAAY,CAAE,CAAEG,IAAI,CAAE,MAAR,CAA5B,UACGC,KAAK,CAACC,IAAN,CAAW,GAAID,CAAAA,KAAJ,CAAU,CAAV,CAAX,EAAyBE,GAAzB,CAA6B,SAACC,CAAD,CAAIC,GAAJ,qBAC5B,KAAC,QAAD,EAAU,IAAI,CAAC,MAAf,EAA2BA,GAA3B,CAD4B,EAA7B,CADH,EADF,CAOD,CAED,mBACE,KAAC,MAAD,EAAQ,KAAK,KAAb,CAAc,YAAY,CAAE,CAAEL,IAAI,CAAE,MAAR,CAAgBJ,IAAI,CAAEF,OAAtB,CAA5B,UACGE,IAAI,CAACU,KAAL,CAAWH,GAAX,CAAe,SAACI,QAAD,qBACd,KAAC,IAAD,EAAM,SAAS,CAAE,CAAEX,IAAI,CAAEW,QAAR,CAAjB,EAA0CA,QAAQ,CAACC,EAAnD,CADc,EAAf,CADH,EADF,CAOD,CAvCD,CAyCA,cAAelB,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Layout from '../../components/Layout';\nimport Card from '../../components/Card';\nimport Skeleton from '../../components/Skeleton';\nimport useFetch from '../../hooks/useFetch';\nimport { getUserByName, getUserPosts } from '../../features/user/userSlice';\n\ntype ParamsProps = {\n  userName: string;\n};\n\n/* Promises pe incarcarea datelor utilizatorului cu tot cu Redux pe 404 */\nconst User: React.FC = () => {\n  const { userName } = useParams<ParamsProps>();\n\n  const {\n    user: { profile },\n  } = useFetch({ action: getUserByName, params: userName });\n\n  const {\n    user: { data, isLoading, isError, error },\n  } = useFetch({ action: getUserPosts, params: userName });\n\n  if (isError) {\n    return (\n      <Layout navigation aside sidebarProps={{ type: 'filter' }}>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          There was an error with your request â€” <strong>{error}</strong>\n        </Alert>\n      </Layout>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Layout aside sidebarProps={{ type: 'user' }}>\n        {Array.from(new Array(3)).map((_, idx) => (\n          <Skeleton type=\"card\" key={idx} />\n        ))}\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout aside sidebarProps={{ type: 'user', data: profile }}>\n      {data.posts.map((userPost: any) => (\n        <Card postProps={{ data: userPost }} key={userPost.id} />\n      ))}\n    </Layout>\n  );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}