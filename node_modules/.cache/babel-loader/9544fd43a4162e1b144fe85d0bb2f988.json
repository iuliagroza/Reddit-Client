{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n/* Updateaza slice-ul si la schimbarea theme-ului */\n\nconst storageThemeMode = localStorage.getItem('material-ui-theme');\nconst defautlTheme = storageThemeMode ? JSON.parse(storageThemeMode) : true;\nconst initialState = {\n  lightMode: defautlTheme\n};\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    updateMode(state, {\n      payload\n    }) {\n      state.lightMode = payload;\n    }\n\n  }\n});\nexport const {\n  updateMode\n} = themeSlice.actions;\nexport default themeSlice.reducer;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/features/theme/themeSlice.ts"],"names":["createSlice","storageThemeMode","localStorage","getItem","defautlTheme","JSON","parse","initialState","lightMode","themeSlice","name","reducers","updateMode","state","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA;;AAMA,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAzB;AACA,MAAMC,YAAY,GAAGH,gBAAgB,GAAGI,IAAI,CAACC,KAAL,CAAWL,gBAAX,CAAH,GAAkC,IAAvE;AAEA,MAAMM,YAAwB,GAAG;AAAEC,EAAAA,SAAS,EAAEJ;AAAb,CAAjC;AAEA,MAAMK,UAAU,GAAGT,WAAW,CAAC;AAC7BU,EAAAA,IAAI,EAAE,OADuB;AAE7BH,EAAAA,YAF6B;AAG7BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAoB;AAAEC,MAAAA;AAAF,KAApB,EAAyD;AACjED,MAAAA,KAAK,CAACL,SAAN,GAAkBM,OAAlB;AACD;;AAHO;AAHmB,CAAD,CAA9B;AAUA,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAiBH,UAAU,CAACM,OAAlC;AAEP,eAAeN,UAAU,CAACO,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n/* Updateaza slice-ul si la schimbarea theme-ului */\n\ntype ThemeState = {\n  lightMode: true | false;\n};\n\nconst storageThemeMode = localStorage.getItem('material-ui-theme');\nconst defautlTheme = storageThemeMode ? JSON.parse(storageThemeMode) : true;\n\nconst initialState: ThemeState = { lightMode: defautlTheme };\n\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    updateMode(state: ThemeState, { payload }: PayloadAction<boolean>) {\n      state.lightMode = payload;\n    },\n  },\n});\n\nexport const { updateMode } = themeSlice.actions;\n\nexport default themeSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}