{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{withStyles,Button,Tooltip}from'@material-ui/core';import PublishIcon from'@material-ui/icons/Publish';import ShareIcon from'@material-ui/icons/Share';import commentsCardStyles from'./commentsCard.styles';import{fd,copyToClipboard}from'../../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CommentCard=function CommentCard(_ref){var classes=_ref.classes,Component=_ref.component,data=_ref.data,postId=_ref.postId;if(!Component)throw new Error('Component was not specified');if(!data)return null;var timeSinceCreated=fd.getTimeFromNow(data.created_utc);var formatSinceEdited=fd.getTimeFromNow(data.edited);var formatedUpvotes=fd.shortenLargeNumber(data.ups);var upvotes=data.ups>1?'upvotes':'upvote';var url=process.env.REACT_APP_VERCEL_URL||'http://localhost:3000';var shareUrl=\"\".concat(url,\"/#/post/\").concat(data.subreddit,\"/comments/\").concat(postId);var authorDisplay;if(data.author!=='[deleted]'){authorDisplay=/*#__PURE__*/_jsx(Link,{\"data-testid\":\"author\",to:\"/profile/\".concat(data.author),children:data.author});}else{authorDisplay=/*#__PURE__*/_jsx(\"span\",{\"data-testid\":\"author\",children:data.author});}return/*#__PURE__*/_jsxs(Component,{className:classes.root,id:data.id,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.header,\"aria-label\":\"comment head\",children:[authorDisplay,/*#__PURE__*/_jsx(\"time\",{children:timeSinceCreated}),data.edited&&/*#__PURE__*/_jsxs(\"time\",{style:{fontStyle:'italic'},children:[' ',\"- edited \",formatSinceEdited]})]}),/*#__PURE__*/_jsx(\"p\",{className:classes.body,\"aria-label\":\"comment body\",\"data-testid\":\"body\",children:data.body}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,\"aria-label\":\"comment actions\",children:[/*#__PURE__*/_jsxs(Button,{startIcon:/*#__PURE__*/_jsx(PublishIcon,{}),size:\"small\",classes:{root:classes.actionVote},disabled:true,children:[formatedUpvotes,\" \",upvotes]}),/*#__PURE__*/_jsx(Tooltip,{placement:\"right\",title:\"Copy\",\"aria-label\":\"copy\",arrow:true,children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return copyToClipboard(shareUrl);},startIcon:/*#__PURE__*/_jsx(ShareIcon,{}),size:\"small\",children:\"Share\"})})]})]});};export default withStyles(commentsCardStyles)(CommentCard);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/src/components/Card/commentCard/index.tsx"],"names":["React","Link","withStyles","Button","Tooltip","PublishIcon","ShareIcon","commentsCardStyles","fd","copyToClipboard","CommentCard","classes","Component","component","data","postId","Error","timeSinceCreated","getTimeFromNow","created_utc","formatSinceEdited","edited","formatedUpvotes","shortenLargeNumber","ups","upvotes","url","process","env","REACT_APP_VERCEL_URL","shareUrl","subreddit","authorDisplay","author","root","id","header","fontStyle","body","actions","actionVote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Button, Tooltip } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ShareIcon from '@material-ui/icons/Share';\nimport commentsCardStyles, { StyleProps } from './commentsCard.styles';\nimport { fd, copyToClipboard } from '../../../helpers';\n\nexport type TCommentData = {\n  id: string;\n  author: string;\n  body: string;\n  body_html: string;\n  created_utc: number;\n  edited: number;\n  permalink: string;\n  ups: number;\n  subreddit: string;\n};\n\nexport interface CommentDataProps {\n  component?: React.ElementType;\n  data?: TCommentData;\n  postId?: string;\n}\n\nconst CommentCard: React.FC<CommentDataProps & StyleProps> = ({\n  classes,\n  component: Component,\n  data,\n  postId,\n}): React.ReactElement | null => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n\n  const timeSinceCreated = fd.getTimeFromNow(data.created_utc);\n  const formatSinceEdited = fd.getTimeFromNow(data.edited);\n  const formatedUpvotes = fd.shortenLargeNumber(data.ups);\n  const upvotes = data.ups > 1 ? 'upvotes' : 'upvote';\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${postId}`;\n\n  let authorDisplay;\n  if (data.author !== '[deleted]') {\n    authorDisplay = (\n      <Link data-testid=\"author\" to={`/profile/${data.author}`}>\n        {data.author}\n      </Link>\n    );\n  } else {\n    authorDisplay = <span data-testid=\"author\">{data.author}</span>;\n  }\n\n  return (\n    <Component className={classes.root} id={data.id}>\n      <div className={classes.header} aria-label=\"comment head\">\n        {authorDisplay}\n        <time>{timeSinceCreated}</time>\n        {data.edited && (\n          <time style={{ fontStyle: 'italic' }}>\n            {' '}\n            - edited {formatSinceEdited}\n          </time>\n        )}\n      </div>\n      <p className={classes.body} aria-label=\"comment body\" data-testid=\"body\">\n        {data.body}\n      </p>\n      <div className={classes.actions} aria-label=\"comment actions\">\n        <Button\n          startIcon={<PublishIcon />}\n          size=\"small\"\n          classes={{ root: classes.actionVote }}\n          disabled\n        >\n          {formatedUpvotes} {upvotes}\n        </Button>\n        <Tooltip placement=\"right\" title=\"Copy\" aria-label=\"copy\" arrow>\n          <Button\n            onClick={() => copyToClipboard(shareUrl)}\n            startIcon={<ShareIcon />}\n            size=\"small\"\n          >\n            Share\n          </Button>\n        </Tooltip>\n      </div>\n    </Component>\n  );\n};\n\nexport default withStyles(commentsCardStyles)(CommentCard);\n"]},"metadata":{},"sourceType":"module"}