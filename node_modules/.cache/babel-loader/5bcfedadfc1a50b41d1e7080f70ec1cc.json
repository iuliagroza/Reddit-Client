{"ast":null,"code":"import React from'react';import{Avatar,createStyles,withStyles,fade,Box}from'@material-ui/core';import Skeleton from'@material-ui/lab/Skeleton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cardSkeletonStyles=function cardSkeletonStyles(theme){return createStyles({subreddit:{display:'flex',flexDirection:'column',width:'100%',maxWidth:'400px',border:\"1px solid \".concat(fade(theme.palette.action.disabled,0.07)),backgroundColor:theme.palette.background.paper,borderRadius:2,marginBottom:10,padding:14},preview:{width:'100%'}});};// 885x170\nvar SubredditSkeleton=function SubredditSkeleton(_ref){var classes=_ref.classes;return/*#__PURE__*/_jsxs(\"div\",{className:classes.subreddit,children:[/*#__PURE__*/_jsxs(Box,{mb:2,display:\"flex\",alignItems:\"center\",width:\"290px\",children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"circle\",children:/*#__PURE__*/_jsx(Avatar,{})}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",pl:2,children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:100,height:15,style:{marginBottom:4}}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:185,height:11})]})]}),/*#__PURE__*/_jsx(Box,{className:classes.preview,children:/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:\"100%\",height:185})}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",width:\"100%\",ml:2,mt:2,children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:115,height:26}),/*#__PURE__*/_jsxs(Box,{mt:3,mb:3,children:[/*#__PURE__*/_jsx(Skeleton,{width:\"39%\"}),/*#__PURE__*/_jsx(Skeleton,{width:\"90%\"}),/*#__PURE__*/_jsx(Skeleton,{width:\"90%\"})]}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:140,height:18})]})]});};export default withStyles(cardSkeletonStyles)(SubredditSkeleton);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/src/components/Skeleton/subreddit/index.tsx"],"names":["React","Avatar","createStyles","withStyles","fade","Box","Skeleton","cardSkeletonStyles","theme","subreddit","display","flexDirection","width","maxWidth","border","palette","action","disabled","backgroundColor","background","paper","borderRadius","marginBottom","padding","preview","SubredditSkeleton","classes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,MADF,CAEEC,YAFF,CAGEC,UAHF,CAKEC,IALF,CAMEC,GANF,KAOO,mBAPP,CAQA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,C,wFAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,QACzBN,CAAAA,YAAY,CAAC,CACXO,SAAS,CAAE,CACTC,OAAO,CAAE,MADA,CAETC,aAAa,CAAE,QAFN,CAGTC,KAAK,CAAE,MAHE,CAITC,QAAQ,CAAE,OAJD,CAKTC,MAAM,qBAAeV,IAAI,CAACI,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBC,QAAtB,CAAgC,IAAhC,CAAnB,CALG,CAMTC,eAAe,CAAEV,KAAK,CAACO,OAAN,CAAcI,UAAd,CAAyBC,KANjC,CAOTC,YAAY,CAAE,CAPL,CAQTC,YAAY,CAAE,EARL,CASTC,OAAO,CAAE,EATA,CADA,CAYXC,OAAO,CAAE,CACPZ,KAAK,CAAE,MADA,CAZE,CAAD,CADa,EAA3B,CAyBA;AACA,GAAMa,CAAAA,iBAAmC,CAAG,QAAtCA,CAAAA,iBAAsC,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC3D,mBACE,aAAK,SAAS,CAAEA,OAAO,CAACjB,SAAxB,wBACE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,OAAO,CAAC,MAApB,CAA2B,UAAU,CAAC,QAAtC,CAA+C,KAAK,CAAC,OAArD,wBACE,KAAC,QAAD,EAAU,OAAO,CAAC,QAAlB,uBACE,KAAC,MAAD,IADF,EADF,cAIE,MAAC,GAAD,EAAK,OAAO,CAAC,MAAb,CAAoB,aAAa,CAAC,QAAlC,CAA2C,EAAE,CAAE,CAA/C,wBACE,KAAC,QAAD,EACE,OAAO,CAAC,MADV,CAEE,KAAK,CAAE,GAFT,CAGE,MAAM,CAAE,EAHV,CAIE,KAAK,CAAE,CAAEa,YAAY,CAAE,CAAhB,CAJT,EADF,cAOE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,GAAhC,CAAqC,MAAM,CAAE,EAA7C,EAPF,GAJF,GADF,cAeE,KAAC,GAAD,EAAK,SAAS,CAAEI,OAAO,CAACF,OAAxB,uBACE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAC,MAA/B,CAAsC,MAAM,CAAE,GAA9C,EADF,EAfF,cAkBE,MAAC,GAAD,EAAK,OAAO,CAAC,MAAb,CAAoB,aAAa,CAAC,QAAlC,CAA2C,KAAK,CAAC,MAAjD,CAAwD,EAAE,CAAE,CAA5D,CAA+D,EAAE,CAAE,CAAnE,wBACE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,GAAhC,CAAqC,MAAM,CAAE,EAA7C,EADF,cAEE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,wBACE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,EADF,cAEE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,EAFF,cAGE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,EAHF,GAFF,cAOE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,GAAhC,CAAqC,MAAM,CAAE,EAA7C,EAPF,GAlBF,GADF,CA8BD,CA/BD,CAiCA,cAAerB,CAAAA,UAAU,CAACI,kBAAD,CAAV,CAA+BkB,iBAA/B,CAAf","sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  withStyles,\n  Theme,\n  fade,\n  Box,\n} from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst cardSkeletonStyles = (theme: Theme) =>\n  createStyles({\n    subreddit: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      maxWidth: '400px',\n      border: `1px solid ${fade(theme.palette.action.disabled, 0.07)}`,\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 2,\n      marginBottom: 10,\n      padding: 14,\n    },\n    preview: {\n      width: '100%',\n    },\n  });\n\ntype TProps = {\n  classes: {\n    subreddit: string;\n    preview: string;\n  };\n};\n\n// 885x170\nconst SubredditSkeleton: React.FC<TProps> = ({ classes }) => {\n  return (\n    <div className={classes.subreddit}>\n      <Box mb={2} display=\"flex\" alignItems=\"center\" width=\"290px\">\n        <Skeleton variant=\"circle\">\n          <Avatar />\n        </Skeleton>\n        <Box display=\"flex\" flexDirection=\"column\" pl={2}>\n          <Skeleton\n            variant=\"rect\"\n            width={100}\n            height={15}\n            style={{ marginBottom: 4 }}\n          />\n          <Skeleton variant=\"rect\" width={185} height={11} />\n        </Box>\n      </Box>\n      <Box className={classes.preview}>\n        <Skeleton variant=\"rect\" width=\"100%\" height={185} />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" ml={2} mt={2}>\n        <Skeleton variant=\"rect\" width={115} height={26} />\n        <Box mt={3} mb={3}>\n          <Skeleton width=\"39%\" />\n          <Skeleton width=\"90%\" />\n          <Skeleton width=\"90%\" />\n        </Box>\n        <Skeleton variant=\"rect\" width={140} height={18} />\n      </Box>\n    </div>\n  );\n};\n\nexport default withStyles(cardSkeletonStyles)(SubredditSkeleton);\n"]},"metadata":{},"sourceType":"module"}