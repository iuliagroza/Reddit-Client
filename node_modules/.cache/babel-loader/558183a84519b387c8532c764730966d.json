{"ast":null,"code":"import _objectSpread from\"C:/Users/dell/Desktop/Info/Projects/RedditClient2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/dell/Desktop/Info/Projects/RedditClient2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/dell/Desktop/Info/Projects/RedditClient2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/dell/Desktop/Info/Projects/RedditClient2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable consistent-return */import React from'react';import{Link,useHistory}from'react-router-dom';import{withStyles,CircularProgress,TextField}from'@material-ui/core';import Autocomplete from'@material-ui/lab/Autocomplete';import parse from'autosuggest-highlight/parse';import match from'autosuggest-highlight/match';// import debounce from 'lodash/debounce';\nimport searchStyles from'./searchBar.styles';import API from'../../lib/API';import{fd}from'../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialState={before:null,after:null,search:[]};// TODO: Potentially add state logic on the redux store, still TBD\nvar SearchBar=function SearchBar(_ref){var classes=_ref.classes;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var _React$useState3=React.useState(initialState),_React$useState4=_slicedToArray(_React$useState3,2),options=_React$useState4[0],setOptions=_React$useState4[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),term=_React$useState6[0],setTerm=_React$useState6[1];var isLoading=open&&options.search.length===0;var history=useHistory();var handleKeyPress=function handleKeyPress(event){var target=event.target;if(event.key==='Enter'){event.preventDefault();history.push(\"/subreddit/\".concat(target.value));}};React.useEffect(function(){var loadSearchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.getSearchResults({q:term,type:'sr'});case 2:res=_context.sent;setOptions(res);case 4:case\"end\":return _context.stop();}}},_callee);}));return function loadSearchData(){return _ref2.apply(this,arguments);};}();if(term.length>3){// TODO: debounce doesn't work for some reason, still investigating\nvar load=setTimeout(function(){return loadSearchData();},1000);return function(){return clearTimeout(load);};}},[term]);return/*#__PURE__*/_jsx(Autocomplete,{className:classes.search,open:open,onOpen:function onOpen(){setOpen(true);},onClose:function onClose(){setOpen(false);},options:options.search,getOptionLabel:function getOptionLabel(option){return option.display_name;},getOptionSelected:function getOptionSelected(option,value){return option.display_name===value.display_name;},loading:isLoading,loadingText:\"Searching, hang on...\",noOptionsText:\"We found nothing :(\",renderInput:function renderInput(args){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},args),{},{value:term,\"aria-label\":\"Search field\",onChange:function onChange(_ref3){var target=_ref3.target;return setTerm(target.value);},placeholder:\"Search...\",variant:\"outlined\",margin:\"normal\",size:\"small\",InputProps:_objectSpread(_objectSpread({},args.InputProps),{},{endAdornment:/*#__PURE__*/_jsxs(_Fragment,{children:[isLoading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:20}):null,args.InputProps.endAdornment]}),onKeyDown:handleKeyPress})}));},renderOption:function renderOption(option,_ref4){var inputValue=_ref4.inputValue;var matches=match(option.display_name,inputValue);var parts=parse(option.display_name,matches);var formatedSubs=null;if(option.subscribers){formatedSubs=fd.addNumberSeparator(option.subscribers);}return/*#__PURE__*/_jsxs(Link,{className:classes.listSearch,to:\"/subreddit/\".concat(option.display_name),children:[parts.map(function(part,index){return/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:part.highlight?700:400},children:part.text},index);}),/*#__PURE__*/_jsxs(\"p\",{children:[formatedSubs,\" members\"]})]});},freeSolo:true,autoSelect:true,autoComplete:true,autoHighlight:true,handleHomeEndKeys:true,clearOnEscape:true,clearOnBlur:true,openOnFocus:true});};export default withStyles(searchStyles)(SearchBar);","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/src/components/SearchBar/index.tsx"],"names":["React","Link","useHistory","withStyles","CircularProgress","TextField","Autocomplete","parse","match","searchStyles","API","fd","initialState","before","after","search","SearchBar","classes","useState","open","setOpen","options","setOptions","term","setTerm","isLoading","length","history","handleKeyPress","event","target","key","preventDefault","push","value","useEffect","loadSearchData","getSearchResults","q","type","res","load","setTimeout","clearTimeout","option","display_name","args","InputProps","endAdornment","onKeyDown","inputValue","matches","parts","formatedSubs","subscribers","addNumberSeparator","listSearch","map","part","index","fontWeight","highlight","text"],"mappings":"4pBAAA,sCACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,SAAvC,KAAwD,mBAAxD,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,CACA;AACA,MAAOC,CAAAA,YAAP,KAAyC,oBAAzC,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CACA,OAASC,EAAT,KAAmB,eAAnB,C,6IAYA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,MAAM,CAAE,IADW,CAEnBC,KAAK,CAAE,IAFY,CAGnBC,MAAM,CAAE,EAHW,CAArB,CAMA;AACA,GAAMC,CAAAA,SAA+B,CAAG,QAAlCA,CAAAA,SAAkC,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACvD,oBAAwBjB,KAAK,CAACkB,QAAN,CAAwB,KAAxB,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAA8BpB,KAAK,CAACkB,QAAN,CAAwBN,YAAxB,CAA9B,qDAAOS,OAAP,qBAAgBC,UAAhB,qBACA,qBAAwBtB,KAAK,CAACkB,QAAN,CAAuB,EAAvB,CAAxB,qDAAOK,IAAP,qBAAaC,OAAb,qBACA,GAAMC,CAAAA,SAAS,CAAGN,IAAI,EAAIE,OAAO,CAACN,MAAR,CAAeW,MAAf,GAA0B,CAApD,CAEA,GAAMC,CAAAA,OAAO,CAAGzB,UAAU,EAA1B,CAEA,GAAM0B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAkD,CACvE,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACC,MAArB,CAEA,GAAID,KAAK,CAACE,GAAN,GAAc,OAAlB,CAA2B,CACzBF,KAAK,CAACG,cAAN,GAEAL,OAAO,CAACM,IAAR,sBAA2BH,MAAM,CAACI,KAAlC,GACD,CACF,CARD,CAUAlC,KAAK,CAACmC,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,cAAc,2FAAG,iKACH1B,CAAAA,GAAG,CAAC2B,gBAAJ,CAAqB,CACrCC,CAAC,CAAEf,IADkC,CAErCgB,IAAI,CAAE,IAF+B,CAArB,CADG,QACfC,GADe,eAMrBlB,UAAU,CAACkB,GAAD,CAAV,CANqB,sDAAH,kBAAdJ,CAAAA,cAAc,2CAApB,CASA,GAAIb,IAAI,CAACG,MAAL,CAAc,CAAlB,CAAqB,CACnB;AACA,GAAMe,CAAAA,IAAI,CAAGC,UAAU,CAAC,iBAAMN,CAAAA,cAAc,EAApB,EAAD,CAAyB,IAAzB,CAAvB,CAEA,MAAO,kBAAMO,CAAAA,YAAY,CAACF,IAAD,CAAlB,EAAP,CACD,CACF,CAhBD,CAgBG,CAAClB,IAAD,CAhBH,EAkBA,mBACE,KAAC,YAAD,EACE,SAAS,CAAEN,OAAO,CAACF,MADrB,CAEE,IAAI,CAAEI,IAFR,CAGE,MAAM,CAAE,iBAAM,CACZC,OAAO,CAAC,IAAD,CAAP,CACD,CALH,CAME,OAAO,CAAE,kBAAM,CACbA,OAAO,CAAC,KAAD,CAAP,CACD,CARH,CASE,OAAO,CAAEC,OAAO,CAACN,MATnB,CAUE,cAAc,CAAE,wBAAC6B,MAAD,QAAYA,CAAAA,MAAM,CAACC,YAAnB,EAVlB,CAWE,iBAAiB,CAAE,2BAACD,MAAD,CAASV,KAAT,QACjBU,CAAAA,MAAM,CAACC,YAAP,GAAwBX,KAAK,CAACW,YADb,EAXrB,CAcE,OAAO,CAAEpB,SAdX,CAeE,WAAW,CAAC,uBAfd,CAgBE,aAAa,CAAC,qBAhBhB,CAiBE,WAAW,CAAE,qBAACqB,IAAD,qBACX,KAAC,SAAD,gCACMA,IADN,MAEE,KAAK,CAAEvB,IAFT,CAGE,aAAW,cAHb,CAIE,QAAQ,CAAE,4BAAGO,CAAAA,MAAH,OAAGA,MAAH,OAAgBN,CAAAA,OAAO,CAACM,MAAM,CAACI,KAAR,CAAvB,EAJZ,CAKE,WAAW,CAAC,WALd,CAME,OAAO,CAAC,UANV,CAOE,MAAM,CAAC,QAPT,CAQE,IAAI,CAAC,OARP,CASE,UAAU,gCACLY,IAAI,CAACC,UADA,MAERC,YAAY,cACV,2BACGvB,SAAS,cACR,KAAC,gBAAD,EAAkB,KAAK,CAAC,SAAxB,CAAkC,IAAI,CAAE,EAAxC,EADQ,CAEN,IAHN,CAIGqB,IAAI,CAACC,UAAL,CAAgBC,YAJnB,GAHM,CAURC,SAAS,CAAErB,cAVH,EATZ,GADW,EAjBf,CAyCE,YAAY,CAAE,sBAACgB,MAAD,OAA4B,IAAjBM,CAAAA,UAAiB,OAAjBA,UAAiB,CACxC,GAAMC,CAAAA,OAAO,CAAG3C,KAAK,CAACoC,MAAM,CAACC,YAAR,CAAsBK,UAAtB,CAArB,CACA,GAAME,CAAAA,KAAK,CAAG7C,KAAK,CAACqC,MAAM,CAACC,YAAR,CAAsBM,OAAtB,CAAnB,CACA,GAAIE,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAIT,MAAM,CAACU,WAAX,CAAwB,CACtBD,YAAY,CAAG1C,EAAE,CAAC4C,kBAAH,CAAsBX,MAAM,CAACU,WAA7B,CAAf,CACD,CAED,mBACE,MAAC,IAAD,EACE,SAAS,CAAErC,OAAO,CAACuC,UADrB,CAEE,EAAE,sBAAgBZ,MAAM,CAACC,YAAvB,CAFJ,WAIGO,KAAK,CAACK,GAAN,CACC,SACEC,IADF,CAEEC,KAFF,qBAIE,aAEE,KAAK,CAAE,CAAEC,UAAU,CAAEF,IAAI,CAACG,SAAL,CAAiB,GAAjB,CAAuB,GAArC,CAFT,UAIGH,IAAI,CAACI,IAJR,EACOH,KADP,CAJF,EADD,CAJH,cAiBE,qBAAIN,YAAJ,cAjBF,GADF,CAqBD,CAtEH,CAuEE,QAAQ,KAvEV,CAwEE,UAAU,KAxEZ,CAyEE,YAAY,KAzEd,CA0EE,aAAa,KA1Ef,CA2EE,iBAAiB,KA3EnB,CA4EE,aAAa,KA5Ef,CA6EE,WAAW,KA7Eb,CA8EE,WAAW,KA9Eb,EADF,CAkFD,CAtHD,CAwHA,cAAelD,CAAAA,UAAU,CAACM,YAAD,CAAV,CAAyBO,SAAzB,CAAf","sourcesContent":["/* eslint-disable consistent-return */\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { withStyles, CircularProgress, TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n// import debounce from 'lodash/debounce';\nimport searchStyles, { StyleProps } from './searchBar.styles';\nimport API from '../../lib/API';\nimport { fd } from '../../helpers';\n\ninterface TSearchData {\n  display_name: string;\n  subscribers: string;\n}\ninterface ISearch {\n  before: string | null;\n  after: string | null;\n  search: TSearchData[];\n}\n\nconst initialState = {\n  before: null,\n  after: null,\n  search: [],\n};\n\n// TODO: Potentially add state logic on the redux store, still TBD\nconst SearchBar: React.FC<StyleProps> = ({ classes }) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [options, setOptions] = React.useState<ISearch>(initialState);\n  const [term, setTerm] = React.useState<string>('');\n  const isLoading = open && options.search.length === 0;\n\n  const history = useHistory();\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement;\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      history.push(`/subreddit/${target.value}`);\n    }\n  };\n\n  React.useEffect(() => {\n    const loadSearchData = async () => {\n      const res = await API.getSearchResults({\n        q: term,\n        type: 'sr',\n      });\n\n      setOptions(res);\n    };\n\n    if (term.length > 3) {\n      // TODO: debounce doesn't work for some reason, still investigating\n      const load = setTimeout(() => loadSearchData(), 1000);\n\n      return () => clearTimeout(load);\n    }\n  }, [term]);\n\n  return (\n    <Autocomplete\n      className={classes.search}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      options={options.search}\n      getOptionLabel={(option) => option.display_name}\n      getOptionSelected={(option, value) =>\n        option.display_name === value.display_name\n      }\n      loading={isLoading}\n      loadingText=\"Searching, hang on...\"\n      noOptionsText=\"We found nothing :(\"\n      renderInput={(args) => (\n        <TextField\n          {...args}\n          value={term}\n          aria-label=\"Search field\"\n          onChange={({ target }) => setTerm(target.value)}\n          placeholder=\"Search...\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          size=\"small\"\n          InputProps={{\n            ...args.InputProps,\n            endAdornment: (\n              <>\n                {isLoading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {args.InputProps.endAdornment}\n              </>\n            ),\n            onKeyDown: handleKeyPress,\n          }}\n        />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.display_name, inputValue);\n        const parts = parse(option.display_name, matches);\n        let formatedSubs = null;\n        if (option.subscribers) {\n          formatedSubs = fd.addNumberSeparator(option.subscribers);\n        }\n\n        return (\n          <Link\n            className={classes.listSearch}\n            to={`/subreddit/${option.display_name}`}\n          >\n            {parts.map(\n              (\n                part: { highlight: any; text: React.ReactNode },\n                index: number,\n              ) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ),\n            )}\n            <p>{formatedSubs} members</p>\n          </Link>\n        );\n      }}\n      freeSolo\n      autoSelect\n      autoComplete\n      autoHighlight\n      handleHomeEndKeys\n      clearOnEscape\n      clearOnBlur\n      openOnFocus\n    />\n  );\n};\n\nexport default withStyles(searchStyles)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}