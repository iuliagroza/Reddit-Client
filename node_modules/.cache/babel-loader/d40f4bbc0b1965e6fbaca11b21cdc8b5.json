{"ast":null,"code":"import React from'react';import{HashRouter,Switch,Route}from'react-router-dom';import ScrollToTop from'./lib/scrollToTop';import Skeleton from'./components/Skeleton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HomePage=/*#__PURE__*/React.lazy(function(){return import('./pages/home');});var PostPage=/*#__PURE__*/React.lazy(function(){return import('./pages/post');});var SubredditPage=/*#__PURE__*/React.lazy(function(){return import('./pages/subreddit');});var SubredditsPage=/*#__PURE__*/React.lazy(function(){return import('./pages/subreddits');});var ProfilePage=/*#__PURE__*/React.lazy(function(){return import('./pages/profile');});var NoMatchPage=/*#__PURE__*/React.lazy(function(){return import('./pages/404');});// TODO: Imbunatateste app routing path-urile :(\nvar appRoutes=[{path:'/',page:HomePage},{path:'/filter/:filterBy',page:HomePage},{path:'/post/:subredditName/comments/:id',page:PostPage},{path:'/subreddit/:subredditName',page:SubredditPage},{path:'/subreddits/',page:SubredditsPage},{path:'/profile/:userName',page:ProfilePage}];/* Routarea se face cu ajutorul Google Dev si CRA, preluand path-urile server-elor si mapandu-le la indecsii paginilor */var Routes=function Routes(){return/*#__PURE__*/_jsx(React.Suspense,{fallback:/*#__PURE__*/_jsx(Skeleton,{}),children:/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsx(ScrollToTop,{children:/*#__PURE__*/_jsxs(Switch,{children:[appRoutes.map(function(_ref,idx){var path=_ref.path,page=_ref.page;return/*#__PURE__*/_jsx(Route,{path:path,component:page,exact:true},\"\".concat(path,\"-\").concat(idx));}),/*#__PURE__*/_jsx(Route,{path:\"*\",children:/*#__PURE__*/_jsx(NoMatchPage,{})})]})})})});};export default Routes;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/routes.tsx"],"names":["React","HashRouter","Switch","Route","ScrollToTop","Skeleton","HomePage","lazy","PostPage","SubredditPage","SubredditsPage","ProfilePage","NoMatchPage","appRoutes","path","page","Routes","map","idx"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,KAA7B,KAA0C,kBAA1C,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,C,wFAEA,GAAMC,CAAAA,QAAQ,cAAGN,KAAK,CAACO,IAAN,CAAW,iBAAM,QAAO,cAAP,CAAN,EAAX,CAAjB,CACA,GAAMC,CAAAA,QAAQ,cAAGR,KAAK,CAACO,IAAN,CAAW,iBAAM,QAAO,cAAP,CAAN,EAAX,CAAjB,CACA,GAAME,CAAAA,aAAa,cAAGT,KAAK,CAACO,IAAN,CAAW,iBAAM,QAAO,mBAAP,CAAN,EAAX,CAAtB,CACA,GAAMG,CAAAA,cAAc,cAAGV,KAAK,CAACO,IAAN,CAAW,iBAAM,QAAO,oBAAP,CAAN,EAAX,CAAvB,CACA,GAAMI,CAAAA,WAAW,cAAGX,KAAK,CAACO,IAAN,CAAW,iBAAM,QAAO,iBAAP,CAAN,EAAX,CAApB,CACA,GAAMK,CAAAA,WAAW,cAAGZ,KAAK,CAACO,IAAN,CAAW,iBAAM,QAAO,aAAP,CAAN,EAAX,CAApB,CASA;AACA,GAAMM,CAAAA,SAAoB,CAAG,CAC3B,CACEC,IAAI,CAAE,GADR,CAEEC,IAAI,CAAET,QAFR,CAD2B,CAK3B,CACEQ,IAAI,CAAE,mBADR,CAEEC,IAAI,CAAET,QAFR,CAL2B,CAS3B,CACEQ,IAAI,CAAE,mCADR,CAEEC,IAAI,CAAEP,QAFR,CAT2B,CAa3B,CACEM,IAAI,CAAE,2BADR,CAEEC,IAAI,CAAEN,aAFR,CAb2B,CAiB3B,CACEK,IAAI,CAAE,cADR,CAEEC,IAAI,CAAEL,cAFR,CAjB2B,CAqB3B,CACEI,IAAI,CAAE,oBADR,CAEEC,IAAI,CAAEJ,WAFR,CArB2B,CAA7B,CA2BA,yHACA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,mBACE,KAAC,KAAD,CAAO,QAAP,EAAgB,QAAQ,cAAE,KAAC,QAAD,IAA1B,uBACE,KAAC,UAAD,wBACE,KAAC,WAAD,wBACE,MAAC,MAAD,YACGH,SAAS,CAACI,GAAV,CAAc,cAAiBC,GAAjB,KAAGJ,CAAAA,IAAH,MAAGA,IAAH,CAASC,IAAT,MAASA,IAAT,oBACb,KAAC,KAAD,EACE,IAAI,CAAED,IADR,CAEE,SAAS,CAAEC,IAFb,CAGE,KAAK,KAHP,YAIUD,IAJV,aAIkBI,GAJlB,EADa,EAAd,CADH,cASE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,KAAC,WAAD,IADF,EATF,GADF,EADF,EADF,EADF,CAqBD,CAtBD,CAwBA,cAAeF,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport ScrollToTop from './lib/scrollToTop';\nimport Skeleton from './components/Skeleton';\n\nconst HomePage = React.lazy(() => import('./pages/home'));\nconst PostPage = React.lazy(() => import('./pages/post'));\nconst SubredditPage = React.lazy(() => import('./pages/subreddit'));\nconst SubredditsPage = React.lazy(() => import('./pages/subreddits'));\nconst ProfilePage = React.lazy(() => import('./pages/profile'));\nconst NoMatchPage = React.lazy(() => import('./pages/404'));\n\ninterface IRoutes {\n  path: string;\n  page:\n    | React.LazyExoticComponent<React.ComponentType<any>>\n    | React.LazyExoticComponent<React.FC<{}>>;\n}\n\n// TODO: Imbunatateste app routing path-urile :(\nconst appRoutes: IRoutes[] = [\n  {\n    path: '/',\n    page: HomePage,\n  },\n  {\n    path: '/filter/:filterBy',\n    page: HomePage,\n  },\n  {\n    path: '/post/:subredditName/comments/:id',\n    page: PostPage,\n  },\n  {\n    path: '/subreddit/:subredditName',\n    page: SubredditPage,\n  },\n  {\n    path: '/subreddits/',\n    page: SubredditsPage,\n  },\n  {\n    path: '/profile/:userName',\n    page: ProfilePage,\n  },\n];\n\n/* Routarea se face cu ajutorul Google Dev si CRA, preluand path-urile server-elor si mapandu-le la indecsii paginilor */\nconst Routes = () => {\n  return (\n    <React.Suspense fallback={<Skeleton />}>\n      <HashRouter>\n        <ScrollToTop>\n          <Switch>\n            {appRoutes.map(({ path, page }, idx) => (\n              <Route\n                path={path}\n                component={page}\n                exact\n                key={`${path}-${idx}`}\n              />\n            ))}\n            <Route path=\"*\">\n              <NoMatchPage />\n            </Route>\n          </Switch>\n        </ScrollToTop>\n      </HashRouter>\n    </React.Suspense>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}