{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\components\\\\Sidebar\\\\subreddit\\\\index.tsx\";\nimport React from 'react';\nimport { withStyles, Tooltip } from '@material-ui/core';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport SidebarBase from '../sidebarBase';\nimport Panel from '../panel';\nimport subredditStyles from './subreddit.styles';\nimport { fd } from '../../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subreddit = ({\n  data,\n  classes\n}) => {\n  const formatedSubs = fd.shortenLargeNumber(data.subscribers);\n  const formatedActive = fd.shortenLargeNumber(data.active_user_count);\n  const formatCreated = fd.getCreatedTime(data.created_utc);\n  const formatSinceCreated = fd.getTimeFromNow(data.created_utc);\n  return /*#__PURE__*/_jsxDEV(SidebarBase, {\n    content: /*#__PURE__*/_jsxDEV(Panel, {\n      title: `About ${data.display_name} Community`,\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.desc,\n          children: data.public_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.stats,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `${formatedSubs} total subscribers`,\n            arrow: true,\n            placement: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.frame,\n              \"aria-label\": \"Total subscribers\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: formatedSubs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Subscribers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `${formatedActive} users online`,\n            arrow: true,\n            placement: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.frame,\n              \"aria-label\": \"Users online\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: formatedActive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(\"time\", {\n        className: classes.created,\n        children: [/*#__PURE__*/_jsxDEV(CakeIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: formatSinceCreated,\n          arrow: true,\n          placement: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created \", formatCreated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Subreddit;\nexport default withStyles(subredditStyles)(Subreddit);\n\nvar _c;\n\n$RefreshReg$(_c, \"Subreddit\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/components/Sidebar/subreddit/index.tsx"],"names":["React","withStyles","Tooltip","CakeIcon","SidebarBase","Panel","subredditStyles","fd","Subreddit","data","classes","formatedSubs","shortenLargeNumber","subscribers","formatedActive","active_user_count","formatCreated","getCreatedTime","created_utc","formatSinceCreated","getTimeFromNow","display_name","content","desc","public_description","stats","frame","created"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles, Tooltip } from '@material-ui/core';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport SidebarBase from '../sidebarBase';\nimport Panel from '../panel';\nimport subredditStyles, { TStyleProps } from './subreddit.styles';\nimport { fd } from '../../../helpers';\n\nexport type TSidebarData = {\n  display_name: string;\n  public_description: string;\n  active_user_count: number;\n  subscribers: number;\n  created_utc: number;\n};\n\nconst Subreddit: React.FC<{ data: TSidebarData } & TStyleProps> = ({\n  data,\n  classes,\n}) => {\n  const formatedSubs = fd.shortenLargeNumber(data.subscribers);\n  const formatedActive = fd.shortenLargeNumber(data.active_user_count);\n  const formatCreated = fd.getCreatedTime(data.created_utc);\n  const formatSinceCreated = fd.getTimeFromNow(data.created_utc);\n\n  return (\n    <SidebarBase\n      content={\n        <Panel\n          title={`About ${data.display_name} Community`}\n          content={\n            <div className={classes.content}>\n              <p className={classes.desc}>{data.public_description}</p>\n              <div className={classes.stats}>\n                <Tooltip\n                  title={`${formatedSubs} total subscribers`}\n                  arrow\n                  placement=\"bottom\"\n                >\n                  <div className={classes.frame} aria-label=\"Total subscribers\">\n                    <h5>{formatedSubs}</h5>\n                    <p>Subscribers</p>\n                  </div>\n                </Tooltip>\n                <Tooltip\n                  title={`${formatedActive} users online`}\n                  arrow\n                  placement=\"bottom\"\n                >\n                  <div className={classes.frame} aria-label=\"Users online\">\n                    <h5>{formatedActive}</h5>\n                    <p>Online</p>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          }\n          action={\n            <time className={classes.created}>\n              <CakeIcon fontSize=\"small\" />{' '}\n              <Tooltip title={formatSinceCreated} arrow placement=\"bottom\">\n                <p>Created {formatCreated}</p>\n              </Tooltip>\n            </time>\n          }\n        />\n      }\n    />\n  );\n};\n\nexport default withStyles(subredditStyles)(Subreddit);\n"]},"metadata":{},"sourceType":"module"}