{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\routes.tsx\";\nimport React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport ScrollToTop from './lib/scrollToTop';\nimport Skeleton from './components/Skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = /*#__PURE__*/React.lazy(_c = () => import('./pages/home'));\n_c2 = HomePage;\nconst PostPage = /*#__PURE__*/React.lazy(_c3 = () => import('./pages/post'));\n_c4 = PostPage;\nconst SubredditPage = /*#__PURE__*/React.lazy(_c5 = () => import('./pages/subreddit'));\n_c6 = SubredditPage;\nconst SubredditsPage = /*#__PURE__*/React.lazy(_c7 = () => import('./pages/subreddits'));\n_c8 = SubredditsPage;\nconst ProfilePage = /*#__PURE__*/React.lazy(_c9 = () => import('./pages/profile'));\n_c10 = ProfilePage;\nconst NoMatchPage = /*#__PURE__*/React.lazy(_c11 = () => import('./pages/404'));\n_c12 = NoMatchPage;\n// TODO: Imbunatateste app routing path-urile :(\nconst appRoutes = [{\n  path: '/',\n  page: HomePage\n}, {\n  path: '/filter/:filterBy',\n  page: HomePage\n}, {\n  path: '/post/:subredditName/comments/:id',\n  page: PostPage\n}, {\n  path: '/subreddit/:subredditName',\n  page: SubredditPage\n}, {\n  path: '/subreddits/',\n  page: SubredditsPage\n}, {\n  path: '/profile/:userName',\n  page: ProfilePage\n}];\n\nconst Routes = () => {\n  return /*#__PURE__*/_jsxDEV(React.Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(ScrollToTop, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [appRoutes.map(({\n            path,\n            page\n          }, idx) => /*#__PURE__*/_jsxDEV(Route, {\n            path: path,\n            component: page,\n            exact: true\n          }, `${path}-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            children: /*#__PURE__*/_jsxDEV(NoMatchPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c13 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"HomePage$React.lazy\");\n$RefreshReg$(_c2, \"HomePage\");\n$RefreshReg$(_c3, \"PostPage$React.lazy\");\n$RefreshReg$(_c4, \"PostPage\");\n$RefreshReg$(_c5, \"SubredditPage$React.lazy\");\n$RefreshReg$(_c6, \"SubredditPage\");\n$RefreshReg$(_c7, \"SubredditsPage$React.lazy\");\n$RefreshReg$(_c8, \"SubredditsPage\");\n$RefreshReg$(_c9, \"ProfilePage$React.lazy\");\n$RefreshReg$(_c10, \"ProfilePage\");\n$RefreshReg$(_c11, \"NoMatchPage$React.lazy\");\n$RefreshReg$(_c12, \"NoMatchPage\");\n$RefreshReg$(_c13, \"Routes\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/routes.tsx"],"names":["React","HashRouter","Switch","Route","ScrollToTop","Skeleton","HomePage","lazy","PostPage","SubredditPage","SubredditsPage","ProfilePage","NoMatchPage","appRoutes","path","page","Routes","map","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,kBAA1C;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,QAAQ,gBAAGN,KAAK,CAACO,IAAN,MAAW,MAAM,OAAO,cAAP,CAAjB,CAAjB;MAAMD,Q;AACN,MAAME,QAAQ,gBAAGR,KAAK,CAACO,IAAN,OAAW,MAAM,OAAO,cAAP,CAAjB,CAAjB;MAAMC,Q;AACN,MAAMC,aAAa,gBAAGT,KAAK,CAACO,IAAN,OAAW,MAAM,OAAO,mBAAP,CAAjB,CAAtB;MAAME,a;AACN,MAAMC,cAAc,gBAAGV,KAAK,CAACO,IAAN,OAAW,MAAM,OAAO,oBAAP,CAAjB,CAAvB;MAAMG,c;AACN,MAAMC,WAAW,gBAAGX,KAAK,CAACO,IAAN,OAAW,MAAM,OAAO,iBAAP,CAAjB,CAApB;OAAMI,W;AACN,MAAMC,WAAW,gBAAGZ,KAAK,CAACO,IAAN,QAAW,MAAM,OAAO,aAAP,CAAjB,CAApB;OAAMK,W;AASN;AACA,MAAMC,SAAoB,GAAG,CAC3B;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAET;AAFR,CAD2B,EAK3B;AACEQ,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,IAAI,EAAET;AAFR,CAL2B,EAS3B;AACEQ,EAAAA,IAAI,EAAE,mCADR;AAEEC,EAAAA,IAAI,EAAEP;AAFR,CAT2B,EAa3B;AACEM,EAAAA,IAAI,EAAE,2BADR;AAEEC,EAAAA,IAAI,EAAEN;AAFR,CAb2B,EAiB3B;AACEK,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAEL;AAFR,CAjB2B,EAqB3B;AACEI,EAAAA,IAAI,EAAE,oBADR;AAEEC,EAAAA,IAAI,EAAEJ;AAFR,CArB2B,CAA7B;;AA2BA,MAAMK,MAAM,GAAG,MAAM;AACnB,sBACE,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAA1B;AAAA,2BACE,QAAC,UAAD;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,MAAD;AAAA,qBACGH,SAAS,CAACI,GAAV,CAAc,CAAC;AAAEH,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,EAAiBG,GAAjB,kBACb,QAAC,KAAD;AACE,YAAA,IAAI,EAAEJ,IADR;AAEE,YAAA,SAAS,EAAEC,IAFb;AAGE,YAAA,KAAK;AAHP,aAIQ,GAAED,IAAK,IAAGI,GAAI,EAJtB;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,eASE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAA,mCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;OAAMF,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport ScrollToTop from './lib/scrollToTop';\nimport Skeleton from './components/Skeleton';\n\nconst HomePage = React.lazy(() => import('./pages/home'));\nconst PostPage = React.lazy(() => import('./pages/post'));\nconst SubredditPage = React.lazy(() => import('./pages/subreddit'));\nconst SubredditsPage = React.lazy(() => import('./pages/subreddits'));\nconst ProfilePage = React.lazy(() => import('./pages/profile'));\nconst NoMatchPage = React.lazy(() => import('./pages/404'));\n\ninterface IRoutes {\n  path: string;\n  page:\n    | React.LazyExoticComponent<React.ComponentType<any>>\n    | React.LazyExoticComponent<React.FC<{}>>;\n}\n\n// TODO: Imbunatateste app routing path-urile :(\nconst appRoutes: IRoutes[] = [\n  {\n    path: '/',\n    page: HomePage,\n  },\n  {\n    path: '/filter/:filterBy',\n    page: HomePage,\n  },\n  {\n    path: '/post/:subredditName/comments/:id',\n    page: PostPage,\n  },\n  {\n    path: '/subreddit/:subredditName',\n    page: SubredditPage,\n  },\n  {\n    path: '/subreddits/',\n    page: SubredditsPage,\n  },\n  {\n    path: '/profile/:userName',\n    page: ProfilePage,\n  },\n];\n\nconst Routes = () => {\n  return (\n    <React.Suspense fallback={<Skeleton />}>\n      <HashRouter>\n        <ScrollToTop>\n          <Switch>\n            {appRoutes.map(({ path, page }, idx) => (\n              <Route\n                path={path}\n                component={page}\n                exact\n                key={`${path}-${idx}`}\n              />\n            ))}\n            <Route path=\"*\">\n              <NoMatchPage />\n            </Route>\n          </Switch>\n        </ScrollToTop>\n      </HashRouter>\n    </React.Suspense>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}