{"ast":null,"code":"import React from'react';import{Avatar,Box}from'@material-ui/core';import Skeleton from'@material-ui/lab/Skeleton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FlexBox=function FlexBox(_ref){var _ref$fd=_ref.fd,fd=_ref$fd===void 0?'row':_ref$fd,mb=_ref.mb,w=_ref.w,_ref$h=_ref.h,h=_ref$h===void 0?'inherit':_ref$h,children=_ref.children;return/*#__PURE__*/_jsx(Box,{mb:mb,display:\"flex\",flexDirection:fd,alignItems:\"center\",width:w,height:h,justifyContent:\"space-between\",children:children});};var PostSkeleton=function PostSkeleton(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FlexBox,{w:\"285px\",mb:5,children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:63,height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:63,height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:63,height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:63,height:20})]}),/*#__PURE__*/_jsxs(FlexBox,{w:\"100%\",mb:10,children:[/*#__PURE__*/_jsxs(Box,{width:\"20%\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",height:\"35px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:48,height:17}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:43,height:14})]}),/*#__PURE__*/_jsxs(Box,{width:\"100%\",children:[/*#__PURE__*/_jsxs(FlexBox,{mb:3,w:\"250px\",children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"circle\",children:/*#__PURE__*/_jsx(Avatar,{})}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:90,height:15}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:105,height:11})]}),/*#__PURE__*/_jsx(Skeleton,{width:\"90%\",height:28}),/*#__PURE__*/_jsx(Skeleton,{width:\"90%\",height:28})]})]}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:\"100%\",height:468})]});};export default PostSkeleton;","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient2/src/components/Skeleton/post/index.tsx"],"names":["React","Avatar","Box","Skeleton","FlexBox","fd","mb","w","h","children","PostSkeleton"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,GAAjB,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,C,6IAUA,GAAMC,CAAAA,OAA4B,CAAG,QAA/BA,CAAAA,OAA+B,MAM/B,kBALJC,EAKI,CALJA,EAKI,kBALC,KAKD,SAJJC,EAII,MAJJA,EAII,CAHJC,CAGI,MAHJA,CAGI,aAFJC,CAEI,CAFJA,CAEI,iBAFA,SAEA,QADJC,QACI,MADJA,QACI,CACJ,mBACE,KAAC,GAAD,EACE,EAAE,CAAEH,EADN,CAEE,OAAO,CAAC,MAFV,CAGE,aAAa,CAAED,EAHjB,CAIE,UAAU,CAAC,QAJb,CAKE,KAAK,CAAEE,CALT,CAME,MAAM,CAAEC,CANV,CAOE,cAAc,CAAC,eAPjB,UASGC,QATH,EADF,CAaD,CApBD,CAsBA,GAAMC,CAAAA,YAAsB,CAAG,QAAzBA,CAAAA,YAAyB,EAAM,CACnC,mBACE,wCACE,MAAC,OAAD,EAAS,CAAC,CAAC,OAAX,CAAmB,EAAE,CAAE,CAAvB,wBACE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EADF,cAEE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EAFF,cAGE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EAHF,cAIE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EAJF,GADF,cAOE,MAAC,OAAD,EAAS,CAAC,CAAC,MAAX,CAAkB,EAAE,CAAE,EAAtB,wBACE,MAAC,GAAD,EACE,KAAK,CAAC,KADR,CAEE,OAAO,CAAC,MAFV,CAGE,aAAa,CAAC,QAHhB,CAIE,UAAU,CAAC,QAJb,CAKE,MAAM,CAAC,MALT,CAME,cAAc,CAAC,eANjB,wBAQE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EARF,cASE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EATF,GADF,cAYE,MAAC,GAAD,EAAK,KAAK,CAAC,MAAX,wBACE,MAAC,OAAD,EAAS,EAAE,CAAE,CAAb,CAAgB,CAAC,CAAC,OAAlB,wBACE,KAAC,QAAD,EAAU,OAAO,CAAC,QAAlB,uBACE,KAAC,MAAD,IADF,EADF,cAIE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,EAAhC,CAAoC,MAAM,CAAE,EAA5C,EAJF,cAKE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAE,GAAhC,CAAqC,MAAM,CAAE,EAA7C,EALF,GADF,cAQE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,CAAsB,MAAM,CAAE,EAA9B,EARF,cASE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,CAAsB,MAAM,CAAE,EAA9B,EATF,GAZF,GAPF,cA+BE,KAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAC,MAA/B,CAAsC,MAAM,CAAE,GAA9C,EA/BF,GADF,CAmCD,CApCD,CAsCA,cAAeA,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport { Avatar, Box } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\ninterface IBoxProps {\n  fd?: string;\n  mb?: string | number;\n  w?: string | number;\n  h?: string | number;\n  children: React.ReactNode;\n}\n\nconst FlexBox: React.FC<IBoxProps> = ({\n  fd = 'row',\n  mb,\n  w,\n  h = 'inherit',\n  children,\n}) => {\n  return (\n    <Box\n      mb={mb}\n      display=\"flex\"\n      flexDirection={fd}\n      alignItems=\"center\"\n      width={w}\n      height={h}\n      justifyContent=\"space-between\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst PostSkeleton: React.FC = () => {\n  return (\n    <>\n      <FlexBox w=\"285px\" mb={5}>\n        <Skeleton variant=\"rect\" width={63} height={20} />\n        <Skeleton variant=\"rect\" width={63} height={20} />\n        <Skeleton variant=\"rect\" width={63} height={20} />\n        <Skeleton variant=\"rect\" width={63} height={20} />\n      </FlexBox>\n      <FlexBox w=\"100%\" mb={10}>\n        <Box\n          width=\"20%\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          height=\"35px\"\n          justifyContent=\"space-between\"\n        >\n          <Skeleton variant=\"rect\" width={48} height={17} />\n          <Skeleton variant=\"rect\" width={43} height={14} />\n        </Box>\n        <Box width=\"100%\">\n          <FlexBox mb={3} w=\"250px\">\n            <Skeleton variant=\"circle\">\n              <Avatar />\n            </Skeleton>\n            <Skeleton variant=\"rect\" width={90} height={15} />\n            <Skeleton variant=\"rect\" width={105} height={11} />\n          </FlexBox>\n          <Skeleton width=\"90%\" height={28} />\n          <Skeleton width=\"90%\" height={28} />\n        </Box>\n      </FlexBox>\n      <Skeleton variant=\"rect\" width=\"100%\" height={468} />\n    </>\n  );\n};\n\nexport default PostSkeleton;\n"]},"metadata":{},"sourceType":"module"}