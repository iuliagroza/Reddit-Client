{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Info\\\\Projects\\\\RedditClient\\\\src\\\\components\\\\Card\\\\postCard\\\\index.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Avatar, Tooltip, Button, Chip } from '@material-ui/core';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ShareIcon from '@material-ui/icons/Share';\nimport LinkIcon from '@material-ui/icons/Link';\nimport truncate from 'lodash/truncate';\nimport { copyToClipboard, fd, getSrcFromStr } from '../../../helpers';\nimport postCardStyles from './postCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  component: Component,\n  classes,\n  data\n}) => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n\n  const isImage = () => /bmp|webp|png|jpg|jpeg|gif$/.test(data.url); // TODO Figure out how to make \"mov\" keyword not to match the \"movie\" subreddit in the url\n\n\n  const isVideo = () => /mp4|gifv|mkv|webm$/.test(data.url);\n\n  const videoUrl = () => {\n    const urlParts = data.url.split('.');\n    urlParts.pop();\n    return [...urlParts, 'mp4'].join('.');\n  };\n\n  const isEmbed = () => {\n    if (data.media) {\n      return data.media.type === 'youtube.com';\n    }\n\n    return false;\n  }; // BUG: isLink does not match all link posts\n  // TODO: Handle all the edge cases, including property self hint not having an assigned value for some reddit self links\n\n\n  const isLink = () => {\n    return !isVideo() && (data.post_hint === 'link' || data.post_hint === 'self' || data.domain === 'instagram.com');\n  };\n\n  let preview;\n\n  if (isImage()) {\n    preview = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.url,\n      alt: data.subreddit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this);\n  } else if (isVideo()) {\n    const url = videoUrl();\n    preview = /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      muted: true,\n      autoPlay: true,\n      loop: true,\n      \"aria-label\": data.title,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        type: \"video/mp4\",\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } else if (isEmbed()) {\n    const url = getSrcFromStr(data.media_embed.content);\n    preview = /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: data.subreddit,\n      \"aria-label\": data.title,\n      src: url,\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      frameBorder: \"0\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  } else if (isLink()) {\n    preview = /*#__PURE__*/_jsxDEV(Chip, {\n      label: \"External Link\",\n      variant: \"outlined\",\n      color: \"primary\",\n      component: \"a\",\n      href: data.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      clickable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  } else {\n    preview = null;\n  }\n\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${data.id}`;\n  return /*#__PURE__*/_jsxDEV(Component, {\n    className: classes.root,\n    \"aria-label\": \"reddit post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.post,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: classes.header,\n        \"aria-label\": \"post head\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          alt: data.subreddit,\n          src: data.thumbnail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.info,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-testid\": \"subreddit\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/subreddit/${data.subreddit}`,\n              children: [\"r/\", data.subreddit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"author\",\n            children: [\"Postat de\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${data.author}`,\n              children: [\"u/\", data.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.content,\n        \"aria-label\": \"post body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.details,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/post/${data.subreddit}/comments/${data.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              \"data-testid\": \"title\",\n              children: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), data.selftext && /*#__PURE__*/_jsxDEV(\"p\", {\n              \"data-testid\": \"description\",\n              children: truncate(data.selftext, {\n                length: 200\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actions,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              \"aria-label\": \"comments\",\n              startIcon: /*#__PURE__*/_jsxDEV(CommentIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 28\n              }, this),\n              component: Link,\n              to: `/post/${data.subreddit}/comments/${data.id}`,\n              children: \"Commentarii\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              \"aria-label\": \"details\",\n              startIcon: /*#__PURE__*/_jsxDEV(LinkIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 28\n              }, this),\n              component: Link,\n              to: `/post/${data.subreddit}/comments/${data.id}`,\n              children: \"Detalii\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              placement: \"right\",\n              title: \"Copy\",\n              \"aria-label\": \"copy\",\n              arrow: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                \"aria-label\": \"share\",\n                startIcon: /*#__PURE__*/_jsxDEV(ShareIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 30\n                }, this),\n                onClick: () => copyToClipboard(shareUrl),\n                children: \"Distribuie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.preview,\n          \"data-testid\": \"preview\",\n          children: preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ratings,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: fd.shortenLargeNumber(data.ups, null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostCard;\nexport default withStyles(postCardStyles)(PostCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Info/Projects/RedditClient/src/components/Card/postCard/index.tsx"],"names":["React","Link","withStyles","Avatar","Tooltip","Button","Chip","CommentIcon","ShareIcon","LinkIcon","truncate","copyToClipboard","fd","getSrcFromStr","postCardStyles","PostCard","component","Component","classes","data","Error","isImage","test","url","isVideo","videoUrl","urlParts","split","pop","join","isEmbed","media","type","isLink","post_hint","domain","preview","subreddit","title","media_embed","content","process","env","REACT_APP_VERCEL_URL","shareUrl","id","root","post","header","thumbnail","info","author","details","selftext","length","actions","ratings","shortenLargeNumber","ups"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, Avatar, Tooltip, Button, Chip } from '@material-ui/core';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ShareIcon from '@material-ui/icons/Share';\nimport LinkIcon from '@material-ui/icons/Link';\nimport truncate from 'lodash/truncate';\nimport { copyToClipboard, fd, getSrcFromStr } from '../../../helpers';\nimport postCardStyles, { StyleProps } from './postCard.styles';\n\nexport type TPostData = {\n  id: string;\n  subreddit: string;\n  title: string;\n  author: string;\n  selftext: string;\n  domain: string;\n  media: {\n    type: string;\n  } | null;\n  media_embed: {\n    content: string;\n  };\n  secure_media_embed: {\n    media_domain_url: string;\n  };\n  thumbnail: string;\n  permalink: string;\n  post_hint: string;\n  url: string;\n  ups: number;\n};\nexport interface PostDataProps {\n  component?: React.ElementType;\n  data?: TPostData;\n}\n\nconst PostCard: React.FC<StyleProps & PostDataProps> = ({\n  component: Component,\n  classes,\n  data,\n}): React.ReactElement | null => {\n  if (!Component) throw new Error('Component was not specified');\n  if (!data) return null;\n\n  const isImage = () => /bmp|webp|png|jpg|jpeg|gif$/.test(data.url);\n\n  // TODO Figure out how to make \"mov\" keyword not to match the \"movie\" subreddit in the url\n  const isVideo = () => /mp4|gifv|mkv|webm$/.test(data.url);\n  const videoUrl = () => {\n    const urlParts = data.url.split('.');\n    urlParts.pop();\n\n    return [...urlParts, 'mp4'].join('.');\n  };\n  const isEmbed = () => {\n    if (data.media) {\n      return data.media.type === 'youtube.com';\n    }\n    return false;\n  };\n\n  // BUG: isLink does not match all link posts\n  // TODO: Handle all the edge cases, including property self hint not having an assigned value for some reddit self links\n  const isLink = () => {\n    return (\n      !isVideo() &&\n      (data.post_hint === 'link' ||\n        data.post_hint === 'self' ||\n        data.domain === 'instagram.com')\n    );\n  };\n\n  let preview;\n  if (isImage()) {\n    preview = <img src={data.url} alt={data.subreddit} />;\n  } else if (isVideo()) {\n    const url = videoUrl();\n\n    preview = (\n      <video controls muted autoPlay loop aria-label={data.title}>\n        <source type=\"video/mp4\" src={url} />\n      </video>\n    );\n  } else if (isEmbed()) {\n    const url = getSrcFromStr(data.media_embed.content);\n\n    preview = (\n      <iframe\n        title={data.subreddit}\n        aria-label={data.title}\n        src={url}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        frameBorder=\"0\"\n        allowFullScreen\n      />\n    );\n  } else if (isLink()) {\n    preview = (\n      <Chip\n        label=\"External Link\"\n        variant=\"outlined\"\n        color=\"primary\"\n        component=\"a\"\n        href={data.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        clickable\n      />\n    );\n  } else {\n    preview = null;\n  }\n\n  const url = process.env.REACT_APP_VERCEL_URL || 'http://localhost:3000';\n  const shareUrl = `${url}/#/post/${data.subreddit}/comments/${data.id}`;\n\n  return (\n    <Component className={classes.root} aria-label=\"reddit post\">\n      <div className={classes.post}>\n        <header className={classes.header} aria-label=\"post head\">\n          <Avatar alt={data.subreddit} src={data.thumbnail} />\n\n          <div className={classes.info}>\n            <span data-testid=\"subreddit\">\n              <Link to={`/subreddit/${data.subreddit}`}>\n                r/{data.subreddit}\n              </Link>\n            </span>\n\n            <p data-testid=\"author\">\n              Postat de{' '}\n              <Link to={`/profile/${data.author}`}>u/{data.author}</Link>\n            </p>\n          </div>\n        </header>\n        <section className={classes.content} aria-label=\"post body\">\n          <div className={classes.details}>\n            <Link to={`/post/${data.subreddit}/comments/${data.id}`}>\n              <h2 data-testid=\"title\">{data.title}</h2>\n              {data.selftext && (\n                <p data-testid=\"description\">\n                  {truncate(data.selftext, { length: 200 })}\n                </p>\n              )}\n            </Link>\n            <div className={classes.actions}>\n              <Button\n                aria-label=\"comments\"\n                startIcon={<CommentIcon fontSize=\"small\" />}\n                component={Link}\n                to={`/post/${data.subreddit}/comments/${data.id}`}\n              >\n                Commentarii\n              </Button>\n              <Button\n                aria-label=\"details\"\n                startIcon={<LinkIcon fontSize=\"small\" />}\n                component={Link}\n                to={`/post/${data.subreddit}/comments/${data.id}`}\n              >\n                Detalii\n              </Button>\n              <Tooltip placement=\"right\" title=\"Copy\" aria-label=\"copy\" arrow>\n                <Button\n                  aria-label=\"share\"\n                  startIcon={<ShareIcon fontSize=\"small\" />}\n                  onClick={() => copyToClipboard(shareUrl)}\n                >\n                  Distribuie\n                </Button>\n              </Tooltip>\n            </div>\n          </div>\n          <div className={classes.preview} data-testid=\"preview\">\n            {preview}\n          </div>\n        </section>\n      </div>\n      <div className={classes.ratings}>\n        <h2>{fd.shortenLargeNumber(data.ups, null)}</h2>\n      </div>\n    </Component>\n  );\n};\n\nexport default withStyles(postCardStyles)(PostCard);\n"]},"metadata":{},"sourceType":"module"}